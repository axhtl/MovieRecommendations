{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\page\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!username || !password) {\n      alert('아이디와 비밀번호를 입력해 주세요.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post('/member/login', {\n        membername: username,\n        password: password\n      });\n      const {\n        memberId,\n        role,\n        statusCode,\n        message,\n        accessToken\n      } = response.data;\n      if (statusCode === 200 && memberId && accessToken) {\n        alert(message || '로그인 성공!');\n\n        // Local Storage에 토큰 및 사용자 정보 저장\n        localStorage.setItem('memberId', memberId);\n        localStorage.setItem('role', role);\n        localStorage.setItem('token', accessToken);\n\n        // 조건에 따라 페이지 이동\n        if (memberId === 10 || role === 'ADMIN') {\n          navigate('/admin/Users', {\n            replace: true\n          }); // 관리자 페이지로 이동\n        } else {\n          navigate(`/main/${memberId}`, {\n            replace: true\n          }); // 일반 사용자 페이지로 이동\n        }\n      } else {\n        alert(message || '로그인 실패. 다시 시도해 주세요.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('로그인 에러:', error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || '로그인 중 문제가 발생했습니다. 다시 시도해 주세요.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? '로그인 중...' : '로그인'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"dcnk+7idi0lkj5PFbszV9JH+/uk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","loading","setLoading","navigate","handleLogin","e","preventDefault","alert","response","post","membername","memberId","role","statusCode","message","accessToken","data","localStorage","setItem","replace","error","_error$response","_error$response$data","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/page/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/LoginPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    if (!username || !password) {\n      alert('아이디와 비밀번호를 입력해 주세요.');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const response = await axios.post('/member/login', {\n        membername: username,\n        password: password,\n      });\n\n      const { memberId, role, statusCode, message, accessToken } = response.data;\n\n      if (statusCode === 200 && memberId && accessToken) {\n        alert(message || '로그인 성공!');\n\n        // Local Storage에 토큰 및 사용자 정보 저장\n        localStorage.setItem('memberId', memberId);\n        localStorage.setItem('role', role);\n        localStorage.setItem('token', accessToken);\n\n        // 조건에 따라 페이지 이동\n        if (memberId === 10 || role === 'ADMIN') {\n          navigate('/admin/Users', { replace: true }); // 관리자 페이지로 이동\n        } else {\n          navigate(`/main/${memberId}`, { replace: true }); // 일반 사용자 페이지로 이동\n        }\n      } else {\n        alert(message || '로그인 실패. 다시 시도해 주세요.');\n      }\n    } catch (error) {\n      console.error('로그인 에러:', error);\n      alert(\n        error.response?.data?.message || '로그인 중 문제가 발생했습니다. 다시 시도해 주세요.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <form onSubmit={handleLogin} className=\"login-form\">\n        <h2>로그인</h2>\n        <input\n          type=\"text\"\n          placeholder=\"아이디\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          disabled={loading}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          disabled={loading}\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? '로그인 중...' : '로그인'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}