{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useParams}from'react-router-dom';import Navbar from'../ui/Navbar';import RegiMovieList from'../list/RegiMovieList';import'../styles/MainPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MainPage=()=>{const{userId}=useParams();const[movies,setMovies]=useState([]);const[recommendations,setRecommendations]=useState([]);const[nickname,setNickname]=useState('');const[isLoading,setIsLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{const fetchMoviesAndRecommendations=async()=>{const accessToken=localStorage.getItem('token');if(!userId||!accessToken){alert('로그인이 필요합니다. 로그인 페이지로 이동합니다.');navigate('/');return;}try{var _userData$member;const userResponse=await fetch(\"/member/user/\".concat(userId),{headers:{Authorization:\"Bearer \".concat(accessToken)}});if(!userResponse.ok){throw new Error('사용자 데이터 요청 실패');}const userData=await userResponse.json();setMovies(userData.reviewInfos||[]);setNickname(((_userData$member=userData.member)===null||_userData$member===void 0?void 0:_userData$member.nickname)||'');const recommendationsResponse=await fetch(\"/api/ai/predict/\".concat(userId),{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(accessToken)}});if(!recommendationsResponse.ok){const errorMessage=await recommendationsResponse.text();throw new Error(\"\\uCD94\\uCC9C \\uC694\\uCCAD \\uC2E4\\uD328: \".concat(errorMessage));}const recommendationsData=await recommendationsResponse.json();const movies=await Promise.all(recommendationsData.map(async movie=>{try{const detailResponse=await fetch(\"/api/movies/detail/\".concat(movie.movieCd,\"?language=ko\"),{headers:{Authorization:\"Bearer \".concat(accessToken)}});if(!detailResponse.ok){console.error(\"\\uC601\\uD654 \\uC0C1\\uC138 \\uC815\\uBCF4 \\uC694\\uCCAD \\uC2E4\\uD328: \".concat(movie.movieCd));return null;}const detailData=await detailResponse.json();return{id:movie.movieCd,title:detailData.title,posterPath:detailData.poster_path?\"https://image.tmdb.org/t/p/w500\".concat(detailData.poster_path):null};}catch(error){console.error(\"\\uC601\\uD654 \\uC0C1\\uC138 \\uC815\\uBCF4 \\uC694\\uCCAD \\uC911 \\uC624\\uB958 \\uBC1C\\uC0DD: \".concat(movie.movieCd),error);return null;}}));setRecommendations(movies.filter(movie=>movie!==null));}catch(error){console.error('데이터를 불러오는 데 실패했습니다:',error.message);}finally{setIsLoading(false);}};fetchMoviesAndRecommendations();},[userId,navigate]);const handleSearchClick=()=>{navigate('/movie/view');};const handleMovieClick=movieId=>{navigate(\"/api/movies/detail/\".concat(movieId,\"?language=ko\"));};if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"main-page\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB85C\\uB529 \\uC911...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"main-page\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[movies.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-movies\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[nickname,\" \\uB2D8\\uC744 \\uC704\\uD55C \\uC601\\uD654\\uAC00 \\uC544\\uC9C1 \\uC5C6\\uC5B4\\uC694 \\u3160\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uBC14\\uB85C \\uB4F1\\uB85D\\uD558\\uB7EC \\uAC00\\uBCFC\\uAE4C\\uC694?\"}),/*#__PURE__*/_jsx(\"button\",{className:\"add-movie-button\",onClick:handleSearchClick,children:\"\\uC601\\uD654 \\uB4F1\\uB85D\\uD558\\uAE30\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[nickname,\" \\uB2D8\\uC774 \\uB4F1\\uB85D\\uD55C \\uC601\\uD654\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"movie-section\",children:/*#__PURE__*/_jsx(RegiMovieList,{movies:movies})})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[nickname,\" \\uB2D8\\uC744 \\uC704\\uD55C \\uB9DE\\uCDA4 \\uC601\\uD654\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"movie-list\",children:recommendations.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"\\uCD94\\uCC9C \\uC601\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}):recommendations.map(movie=>/*#__PURE__*/_jsxs(\"div\",{className:\"movie-item\",onClick:()=>handleMovieClick(movie.id)// 클릭 이벤트 추가\n,children:[movie.posterPath?/*#__PURE__*/_jsx(\"img\",{src:movie.posterPath,alt:movie.title,className:\"movie-poster\"}):/*#__PURE__*/_jsx(\"div\",{className:\"no-poster\",children:\"\\uD3EC\\uC2A4\\uD130 \\uC5C6\\uC74C\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"movie-title\",children:movie.title})]},movie.id))})]})]});};export default MainPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Navbar","RegiMovieList","jsx","_jsx","jsxs","_jsxs","MainPage","userId","movies","setMovies","recommendations","setRecommendations","nickname","setNickname","isLoading","setIsLoading","navigate","fetchMoviesAndRecommendations","accessToken","localStorage","getItem","alert","_userData$member","userResponse","fetch","concat","headers","Authorization","ok","Error","userData","json","reviewInfos","member","recommendationsResponse","method","errorMessage","text","recommendationsData","Promise","all","map","movie","detailResponse","movieCd","console","error","detailData","id","title","posterPath","poster_path","filter","message","handleSearchClick","handleMovieClick","movieId","className","children","length","onClick","src","alt"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/page/MainPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Navbar from '../ui/Navbar';\r\nimport RegiMovieList from '../list/RegiMovieList';\r\nimport '../styles/MainPage.css';\r\n\r\nconst MainPage = () => {\r\n  const { userId } = useParams();\r\n  const [movies, setMovies] = useState([]);\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [nickname, setNickname] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchMoviesAndRecommendations = async () => {\r\n      const accessToken = localStorage.getItem('token');\r\n\r\n      if (!userId || !accessToken) {\r\n        alert('로그인이 필요합니다. 로그인 페이지로 이동합니다.');\r\n        navigate('/');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const userResponse = await fetch(`/member/user/${userId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n\r\n        if (!userResponse.ok) {\r\n          throw new Error('사용자 데이터 요청 실패');\r\n        }\r\n\r\n        const userData = await userResponse.json();\r\n        setMovies(userData.reviewInfos || []);\r\n        setNickname(userData.member?.nickname || '');\r\n\r\n        const recommendationsResponse = await fetch(`/api/ai/predict/${userId}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n\r\n        if (!recommendationsResponse.ok) {\r\n          const errorMessage = await recommendationsResponse.text();\r\n          throw new Error(`추천 요청 실패: ${errorMessage}`);\r\n        }\r\n\r\n        const recommendationsData = await recommendationsResponse.json();\r\n\r\n        const movies = await Promise.all(\r\n          recommendationsData.map(async (movie) => {\r\n            try {\r\n              const detailResponse = await fetch(\r\n                `/api/movies/detail/${movie.movieCd}?language=ko`,\r\n                {\r\n                  headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                  },\r\n                }\r\n              );\r\n\r\n              if (!detailResponse.ok) {\r\n                console.error(`영화 상세 정보 요청 실패: ${movie.movieCd}`);\r\n                return null;\r\n              }\r\n\r\n              const detailData = await detailResponse.json();\r\n              return {\r\n                id: movie.movieCd,\r\n                title: detailData.title,\r\n                posterPath: detailData.poster_path\r\n                  ? `https://image.tmdb.org/t/p/w500${detailData.poster_path}`\r\n                  : null,\r\n              };\r\n            } catch (error) {\r\n              console.error(`영화 상세 정보 요청 중 오류 발생: ${movie.movieCd}`, error);\r\n              return null;\r\n            }\r\n          })\r\n        );\r\n\r\n        setRecommendations(movies.filter((movie) => movie !== null));\r\n      } catch (error) {\r\n        console.error('데이터를 불러오는 데 실패했습니다:', error.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMoviesAndRecommendations();\r\n  }, [userId, navigate]);\r\n\r\n  const handleSearchClick = () => {\r\n    navigate('/movie/view');\r\n  };\r\n\r\n  const handleMovieClick = (movieId) => {\r\n    navigate(`/api/movies/detail/${movieId}?language=ko`);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"main-page\">\r\n        <Navbar />\r\n        <p>로딩 중...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-page\">\r\n      <Navbar />\r\n      <div className=\"main-content\">\r\n        {movies.length === 0 ? (\r\n          <div className=\"no-movies\">\r\n            <h2>{nickname} 님을 위한 영화가 아직 없어요 ㅠ</h2>\r\n            <p>바로 등록하러 가볼까요?</p>\r\n            <button className=\"add-movie-button\" onClick={handleSearchClick}>\r\n              영화 등록하기\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>{nickname} 님이 등록한 영화</h2>\r\n            <div className=\"movie-section\">\r\n              <RegiMovieList movies={movies} />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <h2>{nickname} 님을 위한 맞춤 영화</h2>\r\n        <div className=\"movie-list\">\r\n          {recommendations.length === 0 ? (\r\n            <p>추천 영화가 없습니다.</p>\r\n          ) : (\r\n            recommendations.map((movie) => (\r\n              <div\r\n                className=\"movie-item\"\r\n                key={movie.id}\r\n                onClick={() => handleMovieClick(movie.id)} // 클릭 이벤트 추가\r\n              >\r\n                {movie.posterPath ? (\r\n                  <img\r\n                    src={movie.posterPath}\r\n                    alt={movie.title}\r\n                    className=\"movie-poster\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"no-poster\">포스터 없음</div>\r\n                )}\r\n                <h3 className=\"movie-title\">{movie.title}</h3>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}