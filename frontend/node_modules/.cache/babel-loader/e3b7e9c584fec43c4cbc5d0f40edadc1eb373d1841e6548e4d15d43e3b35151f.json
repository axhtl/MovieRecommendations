{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\list\\\\MemberInfoEdit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom'; // useParams 추가\nimport '../styles/Edit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genresList = ['드라마', '애니메이션', '액션', '어드벤쳐', '미스터리', '가족', '코미디', '뮤지컬', '범죄', '공연', '공포(호러)', '다큐멘터리', '판타지', '성인물(에로)', 'SF', '스릴러', '전쟁', '멜로/로맨스', '기타'];\nconst Edit = () => {\n  _s();\n  const {\n    memberId\n  } = useParams(); // URL에서 멤버 ID를 가져옴\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n  const [actorList, setActorList] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [newActor, setNewActor] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`/member/user/${memberId}`, {\n          // 동적으로 멤버 ID 사용\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setNickname(data.nickname || '');\n          setActorList(data.preferredActors || []);\n          setSelectedGenres(data.preferredGenres || []);\n        } else {\n          alert('사용자 데이터를 불러오는 데 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('데이터 로드 오류:', error);\n        alert('사용자 데이터를 불러오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [memberId]); // memberId가 변경될 때마다 실행\n\n  // 닉네임 수정\n  const handleNicknameChange = async () => {\n    if (!nickname.trim()) {\n      alert('닉네임을 입력하세요.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`/member/nickname/${memberId}`, {\n        // memberId 추가\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          nickname\n        })\n      });\n      alert('닉네임이 성공적으로 수정되었습니다.');\n    } catch (error) {\n      console.error('닉네임 수정 오류:', error);\n      alert('닉네임 수정에 실패했습니다.');\n    }\n  };\n\n  // 비밀번호 수정\n  const handlePasswordChange = async () => {\n    if (!password.trim()) {\n      alert('비밀번호를 입력하세요.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`/member/password/${memberId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      alert('비밀번호가 성공적으로 수정되었습니다.');\n      setPassword('');\n    } catch (error) {\n      console.error('비밀번호 수정 오류:', error);\n      alert('비밀번호 수정에 실패했습니다.');\n    }\n  };\n\n  // 배우 추가 함수\n  const handleAddActor = async () => {\n    if (!newActor.trim()) {\n      alert('배우 이름을 입력하세요.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:8080/survey/${memberId}/actor`, {\n        // memberId와 actor 추가\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}` // 쿠키 대신 토큰 사용\n        },\n        body: JSON.stringify(newActor)\n      });\n      if (response.ok) {\n        setActorList([...actorList, newActor]); // 로컬 상태에 추가\n        setNewActor(''); // 입력값 초기화\n        alert('배우가 성공적으로 추가되었습니다.');\n      } else {\n        alert('배우 추가에 실패했습니다. 다시 시도해주세요.');\n      }\n    } catch (error) {\n      console.error('배우 추가 중 오류 발생:', error);\n      alert('오류가 발생했습니다. 잠시 후 다시 시도해주세요.');\n    }\n  };\n\n  // 배우 삭제\n  const removeActor = index => {\n    setActorList(actorList.filter((_, i) => i !== index));\n  };\n\n  // 장르 선택/해제\n  const handleGenreChange = genre => {\n    if (selectedGenres.includes(genre)) {\n      setSelectedGenres(selectedGenres.filter(item => item !== genre));\n    } else {\n      setSelectedGenres([...selectedGenres, genre]);\n    }\n  };\n\n  // 설문 데이터 제출\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const surveyData = {\n      preferredGenres: selectedGenres,\n      preferredActors: actorList\n    };\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`/survey/edit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(surveyData)\n      });\n      if (response.ok) {\n        alert('설문 수정이 완료되었습니다.');\n      } else {\n        alert('설문 수정에 실패했습니다. 다시 시도해주세요.');\n      }\n    } catch (error) {\n      console.error('설문 수정 중 오류 발생:', error);\n      alert('오류가 발생했습니다. 잠시 후 다시 시도해주세요.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0 \\uC815\\uBCF4 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nickname,\n        onChange: e => setNickname(e.target.value),\n        placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleNicknameChange,\n        className: \"save-button\",\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePasswordChange,\n        className: \"save-button\",\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"edit-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC88B\\uC544\\uD558\\uB294 \\uBC30\\uC6B0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actor-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newActor,\n            onChange: e => setNewActor(e.target.value),\n            placeholder: \"\\uBC30\\uC6B0 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddActor,\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actor-list\",\n          children: actorList.map((actor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actor-item\",\n            children: [actor, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeActor(index),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC88B\\uC544\\uD558\\uB294 \\uC601\\uD654 \\uC7A5\\uB974\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-group\",\n          children: genresList.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `genre-${index}`,\n              value: genre,\n              checked: selectedGenres.includes(genre),\n              onChange: () => handleGenreChange(genre)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `genre-${index}`,\n              children: genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"\\uC218\\uC815\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"save-button\",\n      onClick: () => navigate(-1) // 이전 페이지로 이동\n      ,\n      children: \"\\uB3CC\\uC544\\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(Edit, \"T3dx4xKMiCaE84qcHOtmcDEQ1Dc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","genresList","Edit","_s","memberId","nickname","setNickname","password","setPassword","actorList","setActorList","selectedGenres","setSelectedGenres","newActor","setNewActor","loading","setLoading","navigate","fetchUserData","token","localStorage","getItem","response","fetch","headers","Authorization","ok","data","json","preferredActors","preferredGenres","alert","error","console","handleNicknameChange","trim","method","body","JSON","stringify","handlePasswordChange","handleAddActor","removeActor","index","filter","_","i","handleGenreChange","genre","includes","item","handleSubmit","e","preventDefault","surveyData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","target","placeholder","onClick","onSubmit","map","actor","id","checked","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/list/MemberInfoEdit.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom'; // useParams 추가\r\nimport '../styles/Edit.css';\r\n\r\nconst genresList = [\r\n  '드라마', '애니메이션', '액션', '어드벤쳐', '미스터리', '가족',\r\n  '코미디', '뮤지컬', '범죄', '공연', '공포(호러)', '다큐멘터리',\r\n  '판타지', '성인물(에로)', 'SF', '스릴러', '전쟁', '멜로/로맨스', '기타',\r\n];\r\n\r\nconst Edit = () => {\r\n  const { memberId } = useParams(); // URL에서 멤버 ID를 가져옴\r\n  const [nickname, setNickname] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [actorList, setActorList] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [newActor, setNewActor] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch(`/member/user/${memberId}`, { // 동적으로 멤버 ID 사용\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setNickname(data.nickname || '');\r\n          setActorList(data.preferredActors || []);\r\n          setSelectedGenres(data.preferredGenres || []);\r\n        } else {\r\n          alert('사용자 데이터를 불러오는 데 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('데이터 로드 오류:', error);\r\n        alert('사용자 데이터를 불러오는 중 오류가 발생했습니다.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [memberId]); // memberId가 변경될 때마다 실행\r\n\r\n  // 닉네임 수정\r\n  const handleNicknameChange = async () => {\r\n    if (!nickname.trim()) {\r\n      alert('닉네임을 입력하세요.');\r\n      return;\r\n    }\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await fetch(`/member/nickname/${memberId}`, { // memberId 추가\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ nickname }),\r\n      });\r\n      alert('닉네임이 성공적으로 수정되었습니다.');\r\n    } catch (error) {\r\n      console.error('닉네임 수정 오류:', error);\r\n      alert('닉네임 수정에 실패했습니다.');\r\n    }\r\n  };\r\n  \r\n\r\n  // 비밀번호 수정\r\n  const handlePasswordChange = async () => {\r\n    if (!password.trim()) {\r\n      alert('비밀번호를 입력하세요.');\r\n      return;\r\n    }\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await fetch(`/member/password/${memberId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ password }),\r\n      });\r\n      alert('비밀번호가 성공적으로 수정되었습니다.');\r\n      setPassword('');\r\n    } catch (error) {\r\n      console.error('비밀번호 수정 오류:', error);\r\n      alert('비밀번호 수정에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  // 배우 추가 함수\r\nconst handleAddActor = async () => {\r\n  if (!newActor.trim()) {\r\n    alert('배우 이름을 입력하세요.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`http://localhost:8080/survey/${memberId}/actor`, { // memberId와 actor 추가\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`, // 쿠키 대신 토큰 사용\r\n      },\r\n      body: JSON.stringify(newActor),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setActorList([...actorList, newActor]); // 로컬 상태에 추가\r\n      setNewActor(''); // 입력값 초기화\r\n      alert('배우가 성공적으로 추가되었습니다.');\r\n    } else {\r\n      alert('배우 추가에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  } catch (error) {\r\n    console.error('배우 추가 중 오류 발생:', error);\r\n    alert('오류가 발생했습니다. 잠시 후 다시 시도해주세요.');\r\n  }\r\n};\r\n\r\n  // 배우 삭제\r\n  const removeActor = (index) => {\r\n    setActorList(actorList.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // 장르 선택/해제\r\n  const handleGenreChange = (genre) => {\r\n    if (selectedGenres.includes(genre)) {\r\n      setSelectedGenres(selectedGenres.filter((item) => item !== genre));\r\n    } else {\r\n      setSelectedGenres([...selectedGenres, genre]);\r\n    }\r\n  };\r\n\r\n  // 설문 데이터 제출\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const surveyData = {\r\n      preferredGenres: selectedGenres,\r\n      preferredActors: actorList,\r\n    };\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`/survey/edit`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(surveyData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('설문 수정이 완료되었습니다.');\r\n      } else {\r\n        alert('설문 수정에 실패했습니다. 다시 시도해주세요.');\r\n      }\r\n    } catch (error) {\r\n      console.error('설문 수정 중 오류 발생:', error);\r\n      alert('오류가 발생했습니다. 잠시 후 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"edit-page\">\r\n      <h2>회원 정보 수정</h2>\r\n\r\n      {/* 닉네임 수정 */}\r\n      <div className=\"form-group\">\r\n        <label>닉네임</label>\r\n        <input\r\n          type=\"text\"\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          placeholder=\"닉네임을 입력하세요\"\r\n        />\r\n        <button type=\"button\" onClick={handleNicknameChange} className=\"save-button\">수정</button>\r\n      </div>\r\n\r\n      {/* 비밀번호 수정 */}\r\n      <div className=\"form-group\">\r\n        <label>비밀번호</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"비밀번호를 입력하세요\"\r\n        />\r\n        <button type=\"button\" onClick={handlePasswordChange} className=\"save-button\">수정</button>\r\n      </div>\r\n\r\n      <form className=\"edit-form\" onSubmit={handleSubmit}>\r\n        {/* 선호 배우 관리 */}\r\n        <div className=\"form-group\">\r\n          <label>좋아하는 배우</label>\r\n          <div className=\"actor-input-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={newActor}\r\n              onChange={(e) => setNewActor(e.target.value)}\r\n              placeholder=\"배우 이름을 입력하세요\"\r\n            />\r\n            <button type=\"button\" onClick={handleAddActor}>추가</button>\r\n          </div>\r\n          <div className=\"actor-list\">\r\n            {actorList.map((actor, index) => (\r\n              <div key={index} className=\"actor-item\">\r\n                {actor}\r\n                <button type=\"button\" onClick={() => removeActor(index)}>삭제</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 선호 장르 관리 */}\r\n        <div className=\"form-group\">\r\n          <label>좋아하는 영화 장르</label>\r\n          <div className=\"checkbox-group\">\r\n            {genresList.map((genre, index) => (\r\n              <div key={index} className=\"checkbox-item\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={`genre-${index}`}\r\n                  value={genre}\r\n                  checked={selectedGenres.includes(genre)}\r\n                  onChange={() => handleGenreChange(genre)}\r\n                />\r\n                <label htmlFor={`genre-${index}`}>{genre}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-button\">수정하기</button>\r\n      </form>\r\n\r\n      {/* 돌아가기 버튼 */}\r\n      <button\r\n        type=\"button\"\r\n        className=\"save-button\"\r\n        onClick={() => navigate(-1)} // 이전 페이지로 이동\r\n      >\r\n        돌아가기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}