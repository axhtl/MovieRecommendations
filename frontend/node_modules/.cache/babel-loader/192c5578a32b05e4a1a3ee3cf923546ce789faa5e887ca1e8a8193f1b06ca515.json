{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\admin\\\\AdminMovie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AdminNavbar from '../ui/AdminNavbar';\nimport axios from 'axios';\nimport '../styles/admin/AdminUsers.css'; // 기존 스타일 재사용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminMovie() {\n  _s();\n  const [movies, setMovies] = useState([]); // 영화 데이터를 저장할 상태\n  const navigate = useNavigate();\n  useEffect(() => {\n    const memberId = localStorage.getItem('memberId');\n    const token = localStorage.getItem('token');\n\n    // 관리자 권한 확인\n    if (!memberId || memberId !== '14' || !token) {\n      alert('접근 권한이 없습니다.');\n      navigate('/');\n      return; // navigate 이후 불필요한 코드 실행 방지\n    }\n    const fetchMovieData = async () => {\n      try {\n        const userResponse = await axios.get('/member/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const allMovies = [];\n\n        // 각 사용자별로 영화 데이터 가져오기\n        for (const user of userResponse.data) {\n          const memberId = user.member.memberId;\n          const reviewInfos = user.reviewInfos || [];\n\n          // 영화 리뷰 정보가 있는 경우만 처리\n          if (reviewInfos.length > 0) {\n            const movieTitlesResponse = await axios.get(`/member/${memberId}/movie-titles`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            reviewInfos.forEach(reviewInfo => {\n              const movieTitle = movieTitlesResponse.data.find(title => title.movieId === reviewInfo.movieInfo.movieId);\n              allMovies.push({\n                memberId: user.member.memberId,\n                memberName: user.member.membername,\n                movieTitle: movieTitle ? movieTitle.title : 'Unknown',\n                reviewContent: reviewInfo.movieInfo.title\n              });\n            });\n          }\n        }\n        setMovies(allMovies);\n      } catch (error) {\n        console.error('영화 데이터를 가져오는 중 오류 발생:', error);\n        alert('영화 데이터를 가져올 수 없습니다.');\n      }\n    };\n    fetchMovieData();\n  }, [navigate]);\n  // 리뷰 삭제 함수\n  const handleDelete = async reviewId => {\n    const token = localStorage.getItem('token');\n    try {\n      await axios.delete(`/review/${reviewId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(`리뷰 ID ${reviewId} 삭제 완료`);\n      setMovies(prevMovies => prevMovies.filter(movie => movie.reviewId !== reviewId));\n    } catch (error) {\n      console.error('리뷰 삭제 중 오류 발생:', error);\n      alert('리뷰를 삭제할 수 없습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC601\\uD654 \\uAE30\\uB85D \\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Member ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Member Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Movie Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.memberId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.memberName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.reviewContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button\",\n                onClick: () => alert(`영화 기록 삭제 준비 중: ${movie.memberId}`),\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminMovie, \"2l8veYWCZCJ84ygQNsrVM9qUT6I=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminMovie;\nexport default AdminMovie;\nvar _c;\n$RefreshReg$(_c, \"AdminMovie\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","AdminNavbar","axios","jsxDEV","_jsxDEV","AdminMovie","_s","movies","setMovies","navigate","memberId","localStorage","getItem","token","alert","fetchMovieData","userResponse","get","headers","Authorization","allMovies","user","data","member","reviewInfos","length","movieTitlesResponse","forEach","reviewInfo","movieTitle","find","title","movieId","movieInfo","push","memberName","membername","reviewContent","error","console","handleDelete","reviewId","delete","prevMovies","filter","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/admin/AdminMovie.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdminNavbar from '../ui/AdminNavbar';\r\nimport axios from 'axios';\r\nimport '../styles/admin/AdminUsers.css'; // 기존 스타일 재사용\r\n\r\nfunction AdminMovie() {\r\n  const [movies, setMovies] = useState([]); // 영화 데이터를 저장할 상태\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const memberId = localStorage.getItem('memberId');\r\n    const token = localStorage.getItem('token');\r\n\r\n    // 관리자 권한 확인\r\n    if (!memberId || memberId !== '14' || !token) {\r\n      alert('접근 권한이 없습니다.');\r\n      navigate('/');\r\n      return; // navigate 이후 불필요한 코드 실행 방지\r\n    }\r\n\r\n    const fetchMovieData = async () => {\r\n      try {\r\n        const userResponse = await axios.get('/member/users', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const allMovies = [];\r\n\r\n        // 각 사용자별로 영화 데이터 가져오기\r\n        for (const user of userResponse.data) {\r\n          const memberId = user.member.memberId;\r\n          const reviewInfos = user.reviewInfos || [];\r\n\r\n          // 영화 리뷰 정보가 있는 경우만 처리\r\n          if (reviewInfos.length > 0) {\r\n            const movieTitlesResponse = await axios.get(`/member/${memberId}/movie-titles`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n\r\n            reviewInfos.forEach((reviewInfo) => {\r\n              const movieTitle = movieTitlesResponse.data.find(\r\n                (title) => title.movieId === reviewInfo.movieInfo.movieId\r\n              );\r\n\r\n              allMovies.push({\r\n                memberId: user.member.memberId,\r\n                memberName: user.member.membername,\r\n                movieTitle: movieTitle ? movieTitle.title : 'Unknown',\r\n                reviewContent: reviewInfo.movieInfo.title,\r\n              });\r\n            });\r\n          }\r\n        }\r\n\r\n        setMovies(allMovies);\r\n      } catch (error) {\r\n        console.error('영화 데이터를 가져오는 중 오류 발생:', error);\r\n        alert('영화 데이터를 가져올 수 없습니다.');\r\n      }\r\n    };\r\n\r\n    fetchMovieData();\r\n  }, [navigate]);\r\n  // 리뷰 삭제 함수\r\n  const handleDelete = async (reviewId) => {\r\n    const token = localStorage.getItem('token');\r\n    try {\r\n      await axios.delete(`/review/${reviewId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      alert(`리뷰 ID ${reviewId} 삭제 완료`);\r\n      setMovies((prevMovies) => prevMovies.filter((movie) => movie.reviewId !== reviewId));\r\n    } catch (error) {\r\n      console.error('리뷰 삭제 중 오류 발생:', error);\r\n      alert('리뷰를 삭제할 수 없습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <AdminNavbar />\r\n      <div className=\"admin-content\">\r\n        <h1>영화 기록 조회</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Member ID</th>\r\n              <th>Member Name</th>\r\n              <th>Movie Name</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {movies.map((movie, index) => (\r\n              <tr key={index}>\r\n                <td>{movie.memberId}</td>\r\n                <td>{movie.memberName}</td>\r\n                <td>{movie.reviewContent}</td>\r\n                <td>\r\n                  {/* 삭제 버튼은 이후 구현 예정 */}\r\n                  <button\r\n                    className=\"action-button\"\r\n                    onClick={() => alert(`영화 기록 삭제 준비 중: ${movie.memberId}`)}\r\n                  >\r\n                    삭제\r\n                  </button>\r\n                </td> {/* <td> 닫는 태그 추가 */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminMovie;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}