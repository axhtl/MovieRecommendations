{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\list\\\\MemberInfoEdit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../styles/Edit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = () => {\n  _s();\n  const {\n    memberId\n  } = useParams();\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n  const [actorList, setActorList] = useState([]);\n  const [newActor, setNewActor] = useState('');\n  const [genreList, setGenreList] = useState([]);\n  const [newGenre, setNewGenre] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch(`/member/user/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setNickname(data.nickname || '');\n          setActorList(data.preferredActors || []);\n          setGenreList(data.preferredGenres || []);\n        } else {\n          alert('사용자 데이터를 불러오는 데 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('데이터 로드 오류:', error);\n        alert('사용자 데이터를 불러오는 중 오류가 발생했습니다.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [memberId]);\n  const handleNicknameChange = async () => {\n    if (!nickname.trim()) {\n      alert('닉네임을 입력하세요.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`/member/nickname/${memberId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          nickname\n        })\n      });\n      alert('닉네임이 성공적으로 수정되었습니다.');\n    } catch (error) {\n      console.error('닉네임 수정 오류:', error);\n      alert('닉네임 수정에 실패했습니다.');\n    }\n  };\n  const handlePasswordChange = async () => {\n    if (!password.trim()) {\n      alert('비밀번호를 입력하세요.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`/member/password/${memberId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      alert('비밀번호가 성공적으로 수정되었습니다.');\n      setPassword('');\n    } catch (error) {\n      console.error('비밀번호 수정 오류:', error);\n      alert('비밀번호 수정에 실패했습니다.');\n    }\n  };\n  const handleAddActor = async () => {\n    if (!newActor.trim()) {\n      alert('배우 이름을 입력하세요.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token'); // 인증 토큰 가져오기\n      const response = await fetch(`/survey/${memberId}/actor`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n          // Content-Type을 text/plain으로 설정\n          Authorization: `Bearer ${token}` // 인증 헤더 추가\n        },\n        body: newActor.trim() // 문자열 그대로 전송\n      });\n      if (response.ok) {\n        // 성공적으로 추가되었으면 리스트 업데이트\n        setActorList(prev => [...prev, newActor.trim()]);\n        setNewActor(''); // 입력 필드 초기화\n        alert('선호 배우가 성공적으로 추가되었습니다.');\n      } else {\n        // 실패한 경우 응답 메시지 출력\n        const errorMessage = await response.text();\n        alert(`배우 추가 실패: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('배우 추가 오류:', error);\n      alert('배우 추가 중 오류가 발생했습니다.');\n    }\n  };\n  const handleRemoveActor = async preferredActorId => {\n    try {\n      const token = localStorage.getItem('token'); // 인증 토큰 가져오기\n      const response = await fetch(`/survey/preferred-actors/${preferredActorId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}` // 인증 헤더 추가\n        }\n      });\n      if (response.ok) {\n        // 삭제 성공 시 리스트 업데이트\n        setActorList(prev => prev.filter(item => item.id !== preferredActorId));\n        alert('선호 배우가 성공적으로 삭제되었습니다.');\n      } else {\n        // 삭제 실패 시 응답 메시지 출력\n        const errorMessage = await response.text();\n        alert(`배우 삭제 실패: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('배우 삭제 오류:', error);\n      alert('배우 삭제 중 오류가 발생했습니다.');\n    }\n  };\n  const handleAddGenre = async () => {\n    if (!newGenre.trim()) {\n      alert('장르 이름을 입력하세요.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token'); // 인증 토큰 가져오기\n      const response = await fetch(`/survey/${memberId}/genre`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n          // Content-Type을 text/plain으로 설정\n          Authorization: `Bearer ${token}` // 인증 헤더 추가\n        },\n        body: newGenre.trim() // 문자열 그대로 전송\n      });\n      if (response.ok) {\n        // 성공적으로 추가되었으면 리스트 업데이트\n        setGenreList(prev => [...prev, newGenre.trim()]);\n        setNewGenre(''); // 입력 필드 초기화\n        alert('선호 장르가 성공적으로 추가되었습니다.');\n      } else {\n        // 실패한 경우 응답 메시지 출력\n        const errorMessage = await response.text();\n        alert(`장르 추가 실패: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('장르 추가 오류:', error);\n      alert('장르 추가 중 오류가 발생했습니다.');\n    }\n  };\n  const handleRemoveGenre = async preferredGenreId => {\n    try {\n      const token = localStorage.getItem('token'); // 인증 토큰 가져오기\n      const response = await fetch(`/survey/preferred-genres/${preferredGenreId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}` // 인증 헤더 추가\n        }\n      });\n      if (response.ok) {\n        // 삭제 성공 시 리스트 업데이트\n        setGenreList(prev => prev.filter(item => item.id !== preferredGenreId));\n        alert('선호 장르가 성공적으로 삭제되었습니다.');\n      } else {\n        // 삭제 실패 시 응답 메시지 출력\n        const errorMessage = await response.text();\n        alert(`장르 삭제 실패: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('장르 삭제 오류:', error); // 오류 디버깅\n      alert('장르 삭제 중 오류가 발생했습니다.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"edit-title\",\n      children: \"\\uD68C\\uC6D0 \\uC815\\uBCF4 \\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"\\uB2C9\\uB124\\uC784 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          value: nickname,\n          onChange: e => setNickname(e.target.value),\n          placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"form-button\",\n          onClick: handleNicknameChange,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-input\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"form-button\",\n          onClick: handlePasswordChange,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"\\uC88B\\uC544\\uD558\\uB294 \\uBC30\\uC6B0 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          value: newActor,\n          onChange: e => setNewActor(e.target.value),\n          placeholder: \"\\uBC30\\uC6B0 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"form-button\",\n          onClick: handleAddActor,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actor-list\",\n        children: actorList.length > 0 ? actorList.map(actor => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actor-item\",\n          children: [actor.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"delete-button\",\n            onClick: () => handleRemoveActor(actor.id),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, actor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uCD94\\uAC00\\uB41C \\uBC30\\uC6B0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"\\uC88B\\uC544\\uD558\\uB294 \\uC7A5\\uB974 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          value: newGenre,\n          onChange: e => setNewGenre(e.target.value),\n          placeholder: \"\\uC7A5\\uB974 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"form-button\",\n          onClick: handleAddGenre,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre-list\",\n        children: genreList.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-item\",\n          children: [genre.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"delete-button\",\n            onClick: () => handleRemoveGenre(genre.id) // 고유 ID 전달\n            ,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, genre.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"back-button\",\n      onClick: () => navigate(-1),\n      children: \"\\uB3CC\\uC544\\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(Edit, \"xs0AaWCug42vxE4kuWFyFz+6MFw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","Edit","_s","memberId","nickname","setNickname","password","setPassword","actorList","setActorList","newActor","setNewActor","genreList","setGenreList","newGenre","setNewGenre","loading","setLoading","navigate","fetchUserData","token","localStorage","getItem","response","fetch","headers","Authorization","ok","data","json","preferredActors","preferredGenres","alert","error","console","handleNicknameChange","trim","method","body","JSON","stringify","handlePasswordChange","handleAddActor","prev","errorMessage","text","handleRemoveActor","preferredActorId","filter","item","id","handleAddGenre","handleRemoveGenre","preferredGenreId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","placeholder","onClick","length","map","actor","name","genre","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/list/MemberInfoEdit.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport '../styles/Edit.css';\r\n\r\nconst Edit = () => {\r\n  const { memberId } = useParams();\r\n  const [nickname, setNickname] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [actorList, setActorList] = useState([]);\r\n  const [newActor, setNewActor] = useState('');\r\n  const [genreList, setGenreList] = useState([]);\r\n  const [newGenre, setNewGenre] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch(`/member/user/${memberId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setNickname(data.nickname || '');\r\n          setActorList(data.preferredActors || []);\r\n          setGenreList(data.preferredGenres || []);\r\n        } else {\r\n          alert('사용자 데이터를 불러오는 데 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('데이터 로드 오류:', error);\r\n        alert('사용자 데이터를 불러오는 중 오류가 발생했습니다.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [memberId]);\r\n\r\n  const handleNicknameChange = async () => {\r\n    if (!nickname.trim()) {\r\n      alert('닉네임을 입력하세요.');\r\n      return;\r\n    }\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await fetch(`/member/nickname/${memberId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ nickname }),\r\n      });\r\n      alert('닉네임이 성공적으로 수정되었습니다.');\r\n    } catch (error) {\r\n      console.error('닉네임 수정 오류:', error);\r\n      alert('닉네임 수정에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (!password.trim()) {\r\n      alert('비밀번호를 입력하세요.');\r\n      return;\r\n    }\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await fetch(`/member/password/${memberId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ password }),\r\n      });\r\n      alert('비밀번호가 성공적으로 수정되었습니다.');\r\n      setPassword('');\r\n    } catch (error) {\r\n      console.error('비밀번호 수정 오류:', error);\r\n      alert('비밀번호 수정에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleAddActor = async () => {\r\n    if (!newActor.trim()) {\r\n      alert('배우 이름을 입력하세요.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const token = localStorage.getItem('token'); // 인증 토큰 가져오기\r\n      const response = await fetch(`/survey/${memberId}/actor`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'text/plain', // Content-Type을 text/plain으로 설정\r\n          Authorization: `Bearer ${token}`, // 인증 헤더 추가\r\n        },\r\n        body: newActor.trim(), // 문자열 그대로 전송\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // 성공적으로 추가되었으면 리스트 업데이트\r\n        setActorList((prev) => [...prev, newActor.trim()]);\r\n        setNewActor(''); // 입력 필드 초기화\r\n        alert('선호 배우가 성공적으로 추가되었습니다.');\r\n      } else {\r\n        // 실패한 경우 응답 메시지 출력\r\n        const errorMessage = await response.text();\r\n        alert(`배우 추가 실패: ${errorMessage}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('배우 추가 오류:', error);\r\n      alert('배우 추가 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n  \r\n  const handleRemoveActor = async (preferredActorId) => {\r\n    try {\r\n      const token = localStorage.getItem('token'); // 인증 토큰 가져오기\r\n      const response = await fetch(`/survey/preferred-actors/${preferredActorId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // 인증 헤더 추가\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // 삭제 성공 시 리스트 업데이트\r\n        setActorList((prev) => prev.filter((item) => item.id !== preferredActorId));\r\n        alert('선호 배우가 성공적으로 삭제되었습니다.');\r\n      } else {\r\n        // 삭제 실패 시 응답 메시지 출력\r\n        const errorMessage = await response.text();\r\n        alert(`배우 삭제 실패: ${errorMessage}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('배우 삭제 오류:', error);\r\n      alert('배우 삭제 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n  \r\n  const handleAddGenre = async () => {\r\n    if (!newGenre.trim()) {\r\n      alert('장르 이름을 입력하세요.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const token = localStorage.getItem('token'); // 인증 토큰 가져오기\r\n      const response = await fetch(`/survey/${memberId}/genre`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'text/plain', // Content-Type을 text/plain으로 설정\r\n          Authorization: `Bearer ${token}`, // 인증 헤더 추가\r\n        },\r\n        body: newGenre.trim(), // 문자열 그대로 전송\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // 성공적으로 추가되었으면 리스트 업데이트\r\n        setGenreList((prev) => [...prev, newGenre.trim()]);\r\n        setNewGenre(''); // 입력 필드 초기화\r\n        alert('선호 장르가 성공적으로 추가되었습니다.');\r\n      } else {\r\n        // 실패한 경우 응답 메시지 출력\r\n        const errorMessage = await response.text();\r\n        alert(`장르 추가 실패: ${errorMessage}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('장르 추가 오류:', error);\r\n      alert('장르 추가 중 오류가 발생했습니다.');\r\n    }\r\n  };  \r\n\r\n  const handleRemoveGenre = async (preferredGenreId) => {\r\n    try {\r\n      const token = localStorage.getItem('token'); // 인증 토큰 가져오기\r\n      const response = await fetch(`/survey/preferred-genres/${preferredGenreId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // 인증 헤더 추가\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // 삭제 성공 시 리스트 업데이트\r\n        setGenreList((prev) => prev.filter((item) => item.id !== preferredGenreId));\r\n        alert('선호 장르가 성공적으로 삭제되었습니다.');\r\n      } else {\r\n        // 삭제 실패 시 응답 메시지 출력\r\n        const errorMessage = await response.text();\r\n        alert(`장르 삭제 실패: ${errorMessage}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('장르 삭제 오류:', error); // 오류 디버깅\r\n      alert('장르 삭제 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n  \r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"edit-page\">\r\n      <h2 className=\"edit-title\">회원 정보 수정</h2>\r\n\r\n      <div className=\"form-section\">\r\n        <label className=\"form-label\">닉네임 수정</label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            value={nickname}\r\n            onChange={(e) => setNickname(e.target.value)}\r\n            placeholder=\"닉네임을 입력하세요\"\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"form-button\"\r\n            onClick={handleNicknameChange}\r\n          >\r\n            수정\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-section\">\r\n        <label className=\"form-label\">비밀번호 수정</label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"비밀번호를 입력하세요\"\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"form-button\"\r\n            onClick={handlePasswordChange}\r\n          >\r\n            수정\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-section\">\r\n        <label className=\"form-label\">좋아하는 배우 관리</label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            value={newActor}\r\n            onChange={(e) => setNewActor(e.target.value)}\r\n            placeholder=\"배우 이름을 입력하세요\"\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"form-button\"\r\n            onClick={handleAddActor}\r\n          >\r\n            추가\r\n          </button>\r\n        </div>\r\n        <div className=\"actor-list\">\r\n          {actorList.length > 0 ? (\r\n            actorList.map((actor) => (\r\n              <div key={actor.id} className=\"actor-item\">\r\n                {actor.name}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"delete-button\"\r\n                  onClick={() => handleRemoveActor(actor.id)}\r\n                >\r\n                  삭제\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>추가된 배우가 없습니다.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-section\">\r\n        <label className=\"form-label\">좋아하는 장르 관리</label>\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            value={newGenre}\r\n            onChange={(e) => setNewGenre(e.target.value)}\r\n            placeholder=\"장르 이름을 입력하세요\"\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"form-button\"\r\n            onClick={handleAddGenre}\r\n          >\r\n            추가\r\n          </button>\r\n        </div>\r\n        <div className=\"genre-list\">\r\n          {genreList.map((genre) => (\r\n            <div key={genre.id} className=\"genre-item\">\r\n              {genre.name}\r\n              <button\r\n                type=\"button\"\r\n                className=\"delete-button\"\r\n                onClick={() => handleRemoveGenre(genre.id)} // 고유 ID 전달\r\n              >\r\n                X\r\n              </button>\r\n            </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <button type=\"button\" className=\"back-button\" onClick={() => navigate(-1)}>\r\n        돌아가기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}