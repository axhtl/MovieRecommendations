{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\page\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../ui/Navbar';\nimport MovieList from '../list/MovieList';\nimport '../styles/SearchPage.css';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // URL에서 쿼리 파라미터 추출\n    const queryParams = new URLSearchParams(location.search);\n    const results = queryParams.get('results');\n    const query = queryParams.get('query');\n    try {\n      const parsedResults = results ? JSON.parse(decodeURIComponent(results)) : [];\n      setSearchResults(parsedResults);\n    } catch (error) {\n      console.error('결과 파싱 중 오류:', error);\n    }\n    if (query) {\n      setSearchTerm(query);\n    }\n  }, [location.search]);\n  const handleMovieClick = movieId => {\n    console.log('Navigating to movie details with ID:', movieId);\n    navigate(`/api/movies/detail/${movieId}?language=ko`); // 경로에 쿼리 파라미터 포함\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-content\",\n      children: [searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-results-message\",\n        children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"'\", searchTerm, \"' \\uAC80\\uC0C9 \\uACB0\\uACFC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n          movies: searchResults,\n          onMovieClick: handleMovieClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"AAceJ31zuHGpnuhuZlJEwI7nruE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","MovieList","useLocation","useNavigate","jsxDEV","_jsxDEV","SearchPage","_s","searchResults","setSearchResults","searchTerm","setSearchTerm","location","navigate","queryParams","URLSearchParams","search","results","get","query","parsedResults","JSON","parse","decodeURIComponent","error","console","handleMovieClick","movieId","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","onMovieClick","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/page/SearchPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../ui/Navbar';\r\nimport MovieList from '../list/MovieList';\r\nimport '../styles/SearchPage.css';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst SearchPage = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // URL에서 쿼리 파라미터 추출\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const results = queryParams.get('results');\r\n    const query = queryParams.get('query');\r\n\r\n    try {\r\n      const parsedResults = results ? JSON.parse(decodeURIComponent(results)) : [];\r\n      setSearchResults(parsedResults);\r\n    } catch (error) {\r\n      console.error('결과 파싱 중 오류:', error);\r\n    }\r\n\r\n    if (query) {\r\n      setSearchTerm(query);\r\n    }\r\n  }, [location.search]);\r\n\r\n  const handleMovieClick = (movieId) => {\r\n    console.log('Navigating to movie details with ID:', movieId);\r\n    navigate(`/api/movies/detail/${movieId}?language=ko`); // 경로에 쿼리 파라미터 포함\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-page\">\r\n      <Navbar />\r\n      <div className=\"search-content\">\r\n        {searchResults.length === 0 && (\r\n          <p className=\"no-results-message\">검색 결과가 없습니다.</p>\r\n        )}\r\n        {searchResults.length > 0 && (\r\n          <div className=\"movie-category\">\r\n            <h2>'{searchTerm}' 검색 결과</h2>\r\n            <MovieList movies={searchResults} onMovieClick={handleMovieClick} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}