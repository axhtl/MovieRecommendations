{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\list\\\\RegiMovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport StarRating from './StarRating';\nimport '../styles/RegiMovieList.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegiMovieList = ({\n  movies\n}) => {\n  _s();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [ratings, setRatings] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const memberId = localStorage.getItem('memberId');\n        if (!token || !memberId) {\n          alert('로그인이 필요합니다.');\n          return;\n        }\n\n        // 회원 정보 가져오기\n        const userResponse = await axios.get(`/member/user/${memberId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const userReviews = userResponse.data.reviews || [];\n        const reviewInfos = userResponse.data.reviewInfos || [];\n\n        // 별점 데이터 매핑\n        const reviewsMap = userReviews.reduce((acc, review) => {\n          acc[review.reviewId] = Number(review.ranked);\n          return acc;\n        }, {});\n\n        // 영화 포스터 데이터 가져오기\n        const posterPromises = reviewInfos.map(info => axios.get(`/api/movies/detail/${info.movieInfo.movieId}`, {\n          params: {\n            language: 'ko'\n          },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => ({\n          movieId: info.movieInfo.movieId,\n          posterPath: response.data.poster_path\n        })).catch(() => ({\n          movieId: info.movieInfo.movieId,\n          posterPath: null\n        })));\n        const posterResults = await Promise.all(posterPromises);\n\n        // 포스터 데이터 매핑\n        const posterMap = posterResults.reduce((acc, detail) => {\n          acc[detail.movieId] = detail.posterPath;\n          return acc;\n        }, {});\n        setRatings(reviewsMap);\n        setMovieDetails(posterMap);\n      } catch (error) {\n        var _error$response;\n        console.error('데이터를 가져오는 중 오류 발생:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert('영화 정보를 불러오는 중 문제가 발생했습니다.');\n      }\n    };\n    fetchData();\n  }, [movies]);\n  const scrollLeft = () => {\n    document.querySelector('.movie-list-container').scrollBy({\n      left: -200,\n      behavior: 'smooth'\n    });\n  };\n  const scrollRight = () => {\n    document.querySelector('.movie-list-container').scrollBy({\n      left: 200,\n      behavior: 'smooth'\n    });\n  };\n  const handleMovieClick = review => {\n    navigate(`/movies/${review.movieInfo.movieId}`, {\n      state: {\n        reviewId: review.reviewId\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regi-movie-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"scroll-button left\",\n      onClick: scrollLeft,\n      children: \"\\u2039\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB0B4\\uAC00 \\uB4F1\\uB85D\\uD55C \\uC601\\uD654\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list-container\",\n      children: movies.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-item\",\n        onClick: () => handleMovieClick(review),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movieDetails[review.movieInfo.movieId] ? `https://image.tmdb.org/t/p/w500${movieDetails[review.movieInfo.movieId]}` : '/icons/default-image-url.jpg',\n          alt: review.movieInfo.title || '영화 이미지',\n          onError: e => {\n            e.target.src = '/icons/default-image-url.jpg';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: review.movieInfo.title || '제목 없음'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-rating\",\n          children: /*#__PURE__*/_jsxDEV(StarRating, {\n            rating: ratings[review.reviewId] || 0,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, review.reviewId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"scroll-button right\",\n      onClick: scrollRight,\n      children: \"\\u203A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(RegiMovieList, \"1gPIX3pHIMUM6i8UD4gQb/kL5n4=\", false, function () {\n  return [useNavigate];\n});\n_c = RegiMovieList;\nexport default RegiMovieList;\nvar _c;\n$RefreshReg$(_c, \"RegiMovieList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","StarRating","axios","jsxDEV","_jsxDEV","RegiMovieList","movies","_s","movieDetails","setMovieDetails","ratings","setRatings","navigate","fetchData","token","localStorage","getItem","memberId","alert","userResponse","get","headers","Authorization","userReviews","data","reviews","reviewInfos","reviewsMap","reduce","acc","review","reviewId","Number","ranked","posterPromises","map","info","movieInfo","movieId","params","language","then","response","posterPath","poster_path","catch","posterResults","Promise","all","posterMap","detail","error","_error$response","console","message","scrollLeft","document","querySelector","scrollBy","left","behavior","scrollRight","handleMovieClick","state","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","title","onError","e","target","rating","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/list/RegiMovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport StarRating from './StarRating';\r\nimport '../styles/RegiMovieList.css';\r\nimport axios from 'axios';\r\n\r\nconst RegiMovieList = ({ movies }) => {\r\n  const [movieDetails, setMovieDetails] = useState({});\r\n  const [ratings, setRatings] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const memberId = localStorage.getItem('memberId');\r\n        if (!token || !memberId) {\r\n          alert('로그인이 필요합니다.');\r\n          return;\r\n        }\r\n\r\n        // 회원 정보 가져오기\r\n        const userResponse = await axios.get(`/member/user/${memberId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const userReviews = userResponse.data.reviews || [];\r\n        const reviewInfos = userResponse.data.reviewInfos || [];\r\n\r\n        // 별점 데이터 매핑\r\n        const reviewsMap = userReviews.reduce((acc, review) => {\r\n          acc[review.reviewId] = Number(review.ranked);\r\n          return acc;\r\n        }, {});\r\n\r\n        // 영화 포스터 데이터 가져오기\r\n        const posterPromises = reviewInfos.map((info) =>\r\n          axios\r\n            .get(`/api/movies/detail/${info.movieInfo.movieId}`, {\r\n              params: { language: 'ko' },\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            })\r\n            .then((response) => ({\r\n              movieId: info.movieInfo.movieId,\r\n              posterPath: response.data.poster_path,\r\n            }))\r\n            .catch(() => ({\r\n              movieId: info.movieInfo.movieId,\r\n              posterPath: null,\r\n            }))\r\n        );\r\n\r\n        const posterResults = await Promise.all(posterPromises);\r\n\r\n        // 포스터 데이터 매핑\r\n        const posterMap = posterResults.reduce((acc, detail) => {\r\n          acc[detail.movieId] = detail.posterPath;\r\n          return acc;\r\n        }, {});\r\n\r\n        setRatings(reviewsMap);\r\n        setMovieDetails(posterMap);\r\n      } catch (error) {\r\n        console.error('데이터를 가져오는 중 오류 발생:', error.response?.data || error.message);\r\n        alert('영화 정보를 불러오는 중 문제가 발생했습니다.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [movies]);\r\n\r\n  const scrollLeft = () => {\r\n    document.querySelector('.movie-list-container').scrollBy({\r\n      left: -200,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const scrollRight = () => {\r\n    document.querySelector('.movie-list-container').scrollBy({\r\n      left: 200,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const handleMovieClick = (review) => {\r\n    navigate(`/movies/${review.movieInfo.movieId}`, {\r\n      state: { reviewId: review.reviewId },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"regi-movie-list\">\r\n      <button className=\"scroll-button left\" onClick={scrollLeft}>\r\n        &#8249;\r\n      </button>\r\n      <h2>내가 등록한 영화</h2>\r\n      <div className=\"movie-list-container\">\r\n        {movies.map((review) => (\r\n          <div\r\n            key={review.reviewId}\r\n            className=\"movie-item\"\r\n            onClick={() => handleMovieClick(review)}\r\n          >\r\n            <img\r\n              src={\r\n                movieDetails[review.movieInfo.movieId]\r\n                  ? `https://image.tmdb.org/t/p/w500${movieDetails[review.movieInfo.movieId]}`\r\n                  : '/icons/default-image-url.jpg'\r\n              }\r\n              alt={review.movieInfo.title || '영화 이미지'}\r\n              onError={(e) => {\r\n                e.target.src = '/icons/default-image-url.jpg';\r\n              }}\r\n            />\r\n            <h3>{review.movieInfo.title || '제목 없음'}</h3>\r\n            <div className=\"movie-rating\">\r\n              <StarRating\r\n                rating={ratings[review.reviewId] || 0}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button className=\"scroll-button right\" onClick={scrollRight}>\r\n        &#8250;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegiMovieList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}