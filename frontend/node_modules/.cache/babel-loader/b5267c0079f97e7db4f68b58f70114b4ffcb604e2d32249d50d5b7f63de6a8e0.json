{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\page\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [nickname, setNickname] = useState('');\n  const [membername, setMembername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    // 유효성 검사: 모든 필드가 입력되었는지 확인\n    if (!nickname || !membername || !password || !confirmPassword) {\n      alert('모든 필드를 입력해 주세요.');\n      return;\n    }\n\n    // 비밀번호 확인\n    if (password !== confirmPassword) {\n      alert('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n\n    // 회원가입 데이터\n    const data = {\n      membername: membername,\n      password: password,\n      nickname: nickname\n    };\n    try {\n      // 회원가입 요청\n      const response = await fetch('/member/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        const result = await response.json(); // 서버 응답\n        console.log('회원가입 성공:', result); // 응답 확인\n        const memberId = result.id; // 백엔드 응답에서 memberId 추출\n\n        if (!memberId) {\n          console.error(\"Member ID is missing in the response.\");\n          alert(\"회원가입이 완료되었지만 회원 정보를 불러오는데 실패했습니다. 다시 시도해 주세요.\");\n          return;\n        }\n\n        // 성공 메시지와 페이지 이동\n        alert('회원가입이 성공적으로 완료되었습니다!');\n        navigate(`/survey?userId=${memberId}`);\n      } else {\n        // 실패 시 처리\n        const errorResult = await response.json();\n        console.error('회원가입 실패:', errorResult.message || 'Unknown error');\n        alert(`회원가입에 실패했습니다. 오류: ${errorResult.message || '다시 시도해 주세요.'}`);\n      }\n    } catch (error) {\n      // 네트워크 또는 서버 오류 처리\n      console.error('서버와의 연결에 문제가 발생했습니다:', error);\n      alert('오류가 발생했습니다. 잠시 후 다시 시도해 주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uB2C9\\uB124\\uC784\",\n        value: nickname,\n        onChange: e => setNickname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"\\uC544\\uC774\\uB514 (\\uC774\\uBA54\\uC77C)\",\n        value: membername,\n        onChange: e => setMembername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"GfGxXK5Mog8pMbfxYsfhCVI/dQM=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","nickname","setNickname","membername","setMembername","password","setPassword","confirmPassword","setConfirmPassword","navigate","handleRegister","e","preventDefault","alert","data","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","memberId","id","error","errorResult","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/page/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/RegisterPage.css';\n\nconst RegisterPage = () => {\n    const [nickname, setNickname] = useState('');\n    const [membername, setMembername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n\n        // 유효성 검사: 모든 필드가 입력되었는지 확인\n        if (!nickname || !membername || !password || !confirmPassword) {\n            alert('모든 필드를 입력해 주세요.');\n            return;\n        }\n\n        // 비밀번호 확인\n        if (password !== confirmPassword) {\n            alert('비밀번호가 일치하지 않습니다.');\n            return;\n        }\n\n        // 회원가입 데이터\n        const data = {\n            membername: membername,\n            password: password,\n            nickname: nickname,\n        };\n\n        try {\n            // 회원가입 요청\n            const response = await fetch('/member/signup', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            });\n\n            if (response.ok) {\n                const result = await response.json(); // 서버 응답\n                console.log('회원가입 성공:', result); // 응답 확인\n                const memberId = result.id; // 백엔드 응답에서 memberId 추출\n\n                if (!memberId) {\n                    console.error(\"Member ID is missing in the response.\");\n                    alert(\"회원가입이 완료되었지만 회원 정보를 불러오는데 실패했습니다. 다시 시도해 주세요.\");\n                    return;\n                }\n\n                // 성공 메시지와 페이지 이동\n                alert('회원가입이 성공적으로 완료되었습니다!');\n                navigate(`/survey?userId=${memberId}`);            } else {\n                // 실패 시 처리\n                const errorResult = await response.json();\n                console.error('회원가입 실패:', errorResult.message || 'Unknown error');\n                alert(`회원가입에 실패했습니다. 오류: ${errorResult.message || '다시 시도해 주세요.'}`);\n            }\n        } catch (error) {\n            // 네트워크 또는 서버 오류 처리\n            console.error('서버와의 연결에 문제가 발생했습니다:', error);\n            alert('오류가 발생했습니다. 잠시 후 다시 시도해 주세요.');\n        }\n    };\n\n    return (\n        <div className=\"register-page\">\n            <form onSubmit={handleRegister} className=\"register-form\">\n                <h2>회원가입</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"닉네임\"\n                    value={nickname}\n                    onChange={(e) => setNickname(e.target.value)}\n                />\n                <input\n                    type=\"email\"\n                    placeholder=\"아이디 (이메일)\"\n                    value={membername}\n                    onChange={(e) => setMembername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호 확인\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n                <button type=\"submit\">회원가입</button>\n            </form>\n        </div>\n    );\n};\n\nexport default RegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}