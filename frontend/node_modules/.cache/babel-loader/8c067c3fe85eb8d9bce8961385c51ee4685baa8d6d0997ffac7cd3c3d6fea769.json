{"ast":null,"code":"import React,{useState}from'react';import{useLocation,useNavigate}from'react-router-dom';import'../styles/SurveyPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const genresList=['드라마','애니메이션','액션','어드벤쳐','미스터리','가족','코미디','뮤지컬','범죄','공연','공포(호러)','다큐멘터리','판타지','성인물(에로)','SF','스릴러','전쟁','멜로/로맨스','기타'];const SurveyPage=()=>{const location=useLocation();const searchParams=new URLSearchParams(location.search);const userId=searchParams.get('userId');const navigate=useNavigate();const[actors,setActors]=useState('');const[actorList,setActorList]=useState([]);const[selectedGenres,setSelectedGenres]=useState([]);const[gender,setGender]=useState('');const[age,setAge]=useState('');const addActor=()=>{if(actors.trim()!==''){setActorList([...actorList,actors]);setActors('');}};const removeActor=index=>{const newActorList=actorList.filter((_,i)=>i!==index);setActorList(newActorList);};const handleGenreChange=genre=>{if(selectedGenres.includes(genre)){setSelectedGenres(selectedGenres.filter(item=>item!==genre));}else{setSelectedGenres([...selectedGenres,genre]);}};const handleSubmit=async e=>{e.preventDefault();const surveyData={gender:gender,age:age,preferredGenres:selectedGenres,preferredActors:actorList};try{const response=await fetch(\"/survey/\".concat(userId),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(surveyData)});if(response.ok){alert('설문 제출 성공!');navigate('/');// 설문 제출 후 시작 페이지로 이동\n}else{alert('설문 제출에 실패했습니다. 다시 시도해 주세요.');}}catch(error){console.error('Error:',error);alert('오류가 발생했습니다. 잠시 후 다시 시도해 주세요.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"survey-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC6B0\\uC120! \\uB2F9\\uC2E0\\uC5D0 \\uB300\\uD574 \\uC54C\\uB824\\uC8FC\\uC138\\uC694.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC544\\uB798 \\uC124\\uBB38\\uC870\\uC0AC\\uB97C \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694.\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"survey-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"age\",children:\"\\uB098\\uC774\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"age\",name:\"age\",min:\"10\",max:\"100\",value:age,onChange:e=>setAge(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gender\",children:\"\\uC131\\uBCC4\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"gender\",name:\"gender\",value:gender,onChange:e=>setGender(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uC120\\uD0DD\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"option\",{value:\"M\",children:\"\\uB0A8\\uC131\"}),/*#__PURE__*/_jsx(\"option\",{value:\"F\",children:\"\\uC5EC\\uC131\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC88B\\uC544\\uD558\\uB294 \\uBC30\\uC6B0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"actor-input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:actors,onChange:e=>setActors(e.target.value),placeholder:\"\\uBC30\\uC6B0 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addActor,children:\"\\uCD94\\uAC00\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"actor-list\",children:actorList.map((actor,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"actor-item\",children:[actor,/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeActor(index),children:\"X\"})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC88B\\uC544\\uD558\\uB294 \\uC601\\uD654 \\uC7A5\\uB974\"}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-group\",children:genresList.map((genre,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"genre-\".concat(index),value:genre,checked:selectedGenres.includes(genre),onChange:()=>handleGenreChange(genre)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"genre-\".concat(index),children:genre})]},index))})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uC81C\\uCD9C\"})]})]});};export default SurveyPage;","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","genresList","SurveyPage","location","searchParams","URLSearchParams","search","userId","get","navigate","actors","setActors","actorList","setActorList","selectedGenres","setSelectedGenres","gender","setGender","age","setAge","addActor","trim","removeActor","index","newActorList","filter","_","i","handleGenreChange","genre","includes","item","handleSubmit","e","preventDefault","surveyData","preferredGenres","preferredActors","response","fetch","concat","method","headers","body","JSON","stringify","ok","alert","error","console","className","children","onSubmit","htmlFor","type","id","name","min","max","value","onChange","target","placeholder","onClick","map","actor","checked"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/page/SurveyPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport '../styles/SurveyPage.css';\r\n\r\nconst genresList = [\r\n  '드라마', '애니메이션', '액션', '어드벤쳐', '미스터리', '가족',\r\n  '코미디', '뮤지컬', '범죄', '공연', '공포(호러)', '다큐멘터리',\r\n  '판타지', '성인물(에로)', 'SF', '스릴러', '전쟁', '멜로/로맨스', '기타',\r\n];\r\n\r\nconst SurveyPage = () => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const userId = searchParams.get('userId');\r\n  \r\n  const navigate = useNavigate();\r\n  const [actors, setActors] = useState('');\r\n  const [actorList, setActorList] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [gender, setGender] = useState('');\r\n  const [age, setAge] = useState('');\r\n\r\n  const addActor = () => {\r\n    if (actors.trim() !== '') {\r\n      setActorList([...actorList, actors]);\r\n      setActors('');\r\n    }\r\n  };\r\n\r\n  const removeActor = (index) => {\r\n    const newActorList = actorList.filter((_, i) => i !== index);\r\n    setActorList(newActorList);\r\n  };\r\n\r\n  const handleGenreChange = (genre) => {\r\n    if (selectedGenres.includes(genre)) {\r\n      setSelectedGenres(selectedGenres.filter((item) => item !== genre));\r\n    } else {\r\n      setSelectedGenres([...selectedGenres, genre]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const surveyData = {\r\n      gender: gender,\r\n      age: age,\r\n      preferredGenres: selectedGenres,\r\n      preferredActors: actorList,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`/survey/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(surveyData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('설문 제출 성공!');\r\n        navigate('/'); // 설문 제출 후 시작 페이지로 이동\r\n      } else {\r\n        alert('설문 제출에 실패했습니다. 다시 시도해 주세요.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('오류가 발생했습니다. 잠시 후 다시 시도해 주세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"survey-page\">\r\n      <h2>우선! 당신에 대해 알려주세요.</h2>\r\n      <p>아래 설문조사를 작성해 주세요.</p>\r\n      <form className=\"survey-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"age\">나이</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"age\"\r\n            name=\"age\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            value={age}\r\n            onChange={(e) => setAge(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"gender\">성별</label>\r\n          <select\r\n            id=\"gender\"\r\n            name=\"gender\"\r\n            value={gender}\r\n            onChange={(e) => setGender(e.target.value)}\r\n          >\r\n            <option value=\"\">선택하세요</option>\r\n            <option value=\"M\">남성</option>\r\n            <option value=\"F\">여성</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>좋아하는 배우</label>\r\n          <div className=\"actor-input-group\">\r\n            <input\r\n              type=\"text\"\r\n              value={actors}\r\n              onChange={(e) => setActors(e.target.value)}\r\n              placeholder=\"배우 이름을 입력하세요\"\r\n            />\r\n            <button type=\"button\" onClick={addActor}>추가</button>\r\n          </div>\r\n          <div className=\"actor-list\">\r\n            {actorList.map((actor, index) => (\r\n              <div key={index} className=\"actor-item\">\r\n                {actor}\r\n                <button type=\"button\" onClick={() => removeActor(index)}>X</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>좋아하는 영화 장르</label>\r\n          <div className=\"checkbox-group\">\r\n            {genresList.map((genre, index) => (\r\n              <div key={index} className=\"checkbox-item\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={`genre-${index}`}\r\n                  value={genre}\r\n                  checked={selectedGenres.includes(genre)}\r\n                  onChange={() => handleGenreChange(genre)}\r\n                />\r\n                <label htmlFor={`genre-${index}`}>{genre}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">제출</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}