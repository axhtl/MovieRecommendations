{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\admin\\\\AdminReports.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AdminNavbar from '../ui/AdminNavbar';\nimport { Pie } from 'react-chartjs-2';\nimport '../styles/admin/AdminReports.css'; // 스타일 파일\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminReports() {\n  _s();\n  const [userData, setUserData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const memberId = localStorage.getItem('memberId');\n    const token = localStorage.getItem('token');\n    if (!memberId || memberId !== '14' || !token) {\n      alert('접근 권한이 없습니다.');\n      navigate('/');\n      return;\n    }\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch('/member/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setUserData(data);\n      } catch (error) {\n        console.error('데이터를 가져오는 중 오류 발생:', error);\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n\n  // 통계 데이터 계산\n  const calculateStats = () => {\n    const genderStats = {\n      male: 0,\n      female: 0\n    };\n    const ageStats = {};\n    const genreStats = {};\n    userData.forEach(user => {\n      // 성별 통계\n      if (user.survey.gender === 'M') genderStats.male += 1;\n      if (user.survey.gender === 'F') genderStats.female += 1;\n\n      // 나이 통계\n      const ageGroup = `${Math.floor(user.survey.age / 10) * 10}대`; // 10대, 20대 형식\n      ageStats[ageGroup] = (ageStats[ageGroup] || 0) + 1;\n\n      // 선호 장르 통계\n      user.preferredGenres.forEach(genre => {\n        genreStats[genre] = (genreStats[genre] || 0) + 1;\n      });\n    });\n    return {\n      genderStats,\n      ageStats,\n      genreStats\n    };\n  };\n  const {\n    genderStats,\n    ageStats,\n    genreStats\n  } = calculateStats();\n\n  // 차트 데이터 생성\n  const pieChartData = (labels, data) => ({\n    labels,\n    datasets: [{\n      label: '통계',\n      data,\n      backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#4BC0C0', '#9966FF'],\n      hoverBackgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#4BC0C0', '#9966FF']\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC11C\\uBE44\\uC2A4 \\uD1B5\\uACC4 \\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uC0AC\\uC6A9\\uC790 \\uC120\\uD638 \\uC7A5\\uB974 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {\n            data: pieChartData(Object.keys(genreStats), Object.values(genreStats))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uC131\\uBCC4 \\uD1B5\\uACC4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {\n            data: pieChartData(['Male', 'Female'], [genderStats.male, genderStats.female])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), Object.entries(ageStats).map(([ageGroup, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [ageGroup, \" \\uC120\\uD638 \\uC7A5\\uB974 \\uD1B5\\uACC4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {\n            data: pieChartData(Object.keys(genreStats), Object.values(genreStats))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, ageGroup, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminReports, \"aiXLNCTwd6lUnsrLkMSgcVoPVpA=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminReports;\nexport default AdminReports;\nvar _c;\n$RefreshReg$(_c, \"AdminReports\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","AdminNavbar","Pie","jsxDEV","_jsxDEV","AdminReports","_s","userData","setUserData","navigate","memberId","localStorage","getItem","token","alert","fetchUserData","response","fetch","headers","Authorization","data","json","error","console","calculateStats","genderStats","male","female","ageStats","genreStats","forEach","user","survey","gender","ageGroup","Math","floor","age","preferredGenres","genre","pieChartData","labels","datasets","label","backgroundColor","hoverBackgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","values","entries","map","count","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/admin/AdminReports.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdminNavbar from '../ui/AdminNavbar';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport '../styles/admin/AdminReports.css'; // 스타일 파일\r\n\r\nfunction AdminReports() {\r\n  const [userData, setUserData] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const memberId = localStorage.getItem('memberId');\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!memberId || memberId !== '14' || !token) {\r\n      alert('접근 권한이 없습니다.');\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch('/member/users', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = await response.json();\r\n        setUserData(data);\r\n      } catch (error) {\r\n        console.error('데이터를 가져오는 중 오류 발생:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [navigate]);\r\n\r\n  // 통계 데이터 계산\r\n  const calculateStats = () => {\r\n    const genderStats = { male: 0, female: 0 };\r\n    const ageStats = {};\r\n    const genreStats = {};\r\n\r\n    userData.forEach((user) => {\r\n      // 성별 통계\r\n      if (user.survey.gender === 'M') genderStats.male += 1;\r\n      if (user.survey.gender === 'F') genderStats.female += 1;\r\n\r\n      // 나이 통계\r\n      const ageGroup = `${Math.floor(user.survey.age / 10) * 10}대`; // 10대, 20대 형식\r\n      ageStats[ageGroup] = (ageStats[ageGroup] || 0) + 1;\r\n\r\n      // 선호 장르 통계\r\n      user.preferredGenres.forEach((genre) => {\r\n        genreStats[genre] = (genreStats[genre] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    return { genderStats, ageStats, genreStats };\r\n  };\r\n\r\n  const { genderStats, ageStats, genreStats } = calculateStats();\r\n\r\n  // 차트 데이터 생성\r\n  const pieChartData = (labels, data) => ({\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: '통계',\r\n        data,\r\n        backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n        hoverBackgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <AdminNavbar />\r\n      <div className=\"admin-content\">\r\n        <h1>서비스 통계 조회</h1>\r\n        <div className=\"charts-container\">\r\n          {/* 사용자 선호 장르 통계 */}\r\n          <div className=\"chart\">\r\n            <h3>사용자 선호 장르 통계</h3>\r\n            <Pie data={pieChartData(Object.keys(genreStats), Object.values(genreStats))} />\r\n          </div>\r\n\r\n          {/* 성별 통계 */}\r\n          <div className=\"chart\">\r\n            <h3>성별 통계</h3>\r\n            <Pie data={pieChartData(['Male', 'Female'], [genderStats.male, genderStats.female])} />\r\n          </div>\r\n\r\n          {/* 연령별 선호 장르 통계 */}\r\n          {Object.entries(ageStats).map(([ageGroup, count]) => (\r\n            <div className=\"chart\" key={ageGroup}>\r\n              <h3>{ageGroup} 선호 장르 통계</h3>\r\n              <Pie data={pieChartData(Object.keys(genreStats), Object.values(genreStats))} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminReports;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}