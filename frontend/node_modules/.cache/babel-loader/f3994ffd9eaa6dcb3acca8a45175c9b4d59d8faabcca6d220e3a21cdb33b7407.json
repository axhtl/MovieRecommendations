{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\list\\\\StarRating.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/StarRating.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarRating = ({\n  onRatingChange,\n  rating: initialRating = 0,\n  readOnly = false\n}) => {\n  _s();\n  const [rating, setRating] = useState(Number(initialRating)); // 숫자로 변환하여 설정\n  const [hover, setHover] = useState(null);\n  useEffect(() => {\n    console.log('Initial Rating:', initialRating); // 전달된 초기 rating 확인\n    setRating(Number(initialRating)); // 초기 별점 숫자로 변환\n  }, [initialRating]);\n  const handleRating = value => {\n    if (readOnly) return; // 읽기 전용이면 클릭 불가\n    setRating(value); // rating 업데이트\n    if (onRatingChange) {\n      onRatingChange(value); // 부모 컴포넌트에 값 전달\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"star-rating\",\n    children: [...Array(5)].map((_, index) => {\n      const value = index + 1;\n      const isFilled = value <= (hover || rating); // hover 상태 또는 rating 상태 확인\n\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `star ${isFilled ? 'filled' : ''}` // 클래스 조건에 따라 추가\n        ,\n        onMouseEnter: () => !readOnly && setHover(value) // hover 상태 업데이트\n        ,\n        onMouseLeave: () => !readOnly && setHover(null) // hover 상태 초기화\n        ,\n        onClick: () => handleRating(value) // 클릭 시 별점 설정\n        ,\n        style: {\n          cursor: readOnly ? 'default' : 'pointer'\n        } // 읽기 전용이면 포인터 비활성화\n        ,\n        children: \"\\u2605\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(StarRating, \"YPKMA1RPqGNXJiPV5tXQ/kpZMnI=\");\n_c = StarRating;\nexport default StarRating;\nvar _c;\n$RefreshReg$(_c, \"StarRating\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StarRating","onRatingChange","rating","initialRating","readOnly","_s","setRating","Number","hover","setHover","console","log","handleRating","value","className","children","Array","map","_","index","isFilled","onMouseEnter","onMouseLeave","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/list/StarRating.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/StarRating.css';\r\n\r\nconst StarRating = ({ onRatingChange, rating: initialRating = 0, readOnly = false }) => {\r\n  const [rating, setRating] = useState(Number(initialRating)); // 숫자로 변환하여 설정\r\n  const [hover, setHover] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Initial Rating:', initialRating); // 전달된 초기 rating 확인\r\n    setRating(Number(initialRating)); // 초기 별점 숫자로 변환\r\n  }, [initialRating]);\r\n\r\n  const handleRating = (value) => {\r\n    if (readOnly) return; // 읽기 전용이면 클릭 불가\r\n    setRating(value); // rating 업데이트\r\n    if (onRatingChange) {\r\n      onRatingChange(value); // 부모 컴포넌트에 값 전달\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"star-rating\">\r\n      {[...Array(5)].map((_, index) => {\r\n        const value = index + 1;\r\n        const isFilled = value <= (hover || rating); // hover 상태 또는 rating 상태 확인\r\n\r\n        return (\r\n          <span\r\n            key={index}\r\n            className={`star ${isFilled ? 'filled' : ''}`} // 클래스 조건에 따라 추가\r\n            onMouseEnter={() => !readOnly && setHover(value)} // hover 상태 업데이트\r\n            onMouseLeave={() => !readOnly && setHover(null)} // hover 상태 초기화\r\n            onClick={() => handleRating(value)} // 클릭 시 별점 설정\r\n            style={{ cursor: readOnly ? 'default' : 'pointer' }} // 읽기 전용이면 포인터 비활성화\r\n          >\r\n            ★\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarRating;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,cAAc;EAAEC,MAAM,EAAEC,aAAa,GAAG,CAAC;EAAEC,QAAQ,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACH,MAAM,EAAEI,SAAS,CAAC,GAAGV,QAAQ,CAACW,MAAM,CAACJ,aAAa,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACda,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,aAAa,CAAC,CAAC,CAAC;IAC/CG,SAAS,CAACC,MAAM,CAACJ,aAAa,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAIT,QAAQ,EAAE,OAAO,CAAC;IACtBE,SAAS,CAACO,KAAK,CAAC,CAAC,CAAC;IAClB,IAAIZ,cAAc,EAAE;MAClBA,cAAc,CAACY,KAAK,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzB,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;MAC/B,MAAMN,KAAK,GAAGM,KAAK,GAAG,CAAC;MACvB,MAAMC,QAAQ,GAAGP,KAAK,KAAKL,KAAK,IAAIN,MAAM,CAAC,CAAC,CAAC;;MAE7C,oBACEH,OAAA;QAEEe,SAAS,EAAE,QAAQM,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG,CAAC;QAAA;QAC/CC,YAAY,EAAEA,CAAA,KAAM,CAACjB,QAAQ,IAAIK,QAAQ,CAACI,KAAK,CAAE,CAAC;QAAA;QAClDS,YAAY,EAAEA,CAAA,KAAM,CAAClB,QAAQ,IAAIK,QAAQ,CAAC,IAAI,CAAE,CAAC;QAAA;QACjDc,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACC,KAAK,CAAE,CAAC;QAAA;QACpCW,KAAK,EAAE;UAAEC,MAAM,EAAErB,QAAQ,GAAG,SAAS,GAAG;QAAU,CAAE,CAAC;QAAA;QAAAW,QAAA,EACtD;MAED,GAROI,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQN,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CAtCIL,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}