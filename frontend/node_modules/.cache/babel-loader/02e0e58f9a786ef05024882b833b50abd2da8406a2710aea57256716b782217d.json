{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import'../styles/LoginPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[loading,setLoading]=useState(false);// 로딩 상태 추가\nconst navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();if(!username||!password){alert('아이디와 비밀번호를 입력해 주세요.');return;}setLoading(true);// 로딩 상태 활성화\ntry{const response=await axios.post('/member/login',{membername:username,password:password});const{memberId,role,statusCode,message,accessToken}=response.data;if(statusCode===200&&memberId&&accessToken){alert(message||'로그인 성공!');// Local Storage에 토큰 및 사용자 정보 저장\nlocalStorage.setItem('memberId',memberId);localStorage.setItem('role',role);// role 저장\nlocalStorage.setItem('token',accessToken);// role에 따라 페이지 이동\nif(role==='ADMIN'){navigate('/admin/dashboard',{replace:true});// 관리자 페이지로 이동\n}else{navigate(\"/main/\".concat(memberId),{replace:true});// 일반 사용자 메인 페이지로 이동\n}}else{alert(message||'로그인 실패. 다시 시도해 주세요.');}}catch(error){var _error$response,_error$response$data;console.error('로그인 에러:',error);alert(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'로그인 중 문제가 발생했습니다. 다시 시도해 주세요.');}finally{setLoading(false);// 로딩 상태 비활성화\n}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-page\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"login-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC544\\uC774\\uB514\",value:username,onChange:e=>setUsername(e.target.value),disabled:loading// 로딩 중 입력 비활성화\n}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",value:password,onChange:e=>setPassword(e.target.value),disabled:loading// 로딩 중 입력 비활성화\n}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'로그인 중...':'로그인'})]})});};export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","LoginPage","username","setUsername","password","setPassword","loading","setLoading","navigate","handleLogin","e","preventDefault","alert","response","post","membername","memberId","role","statusCode","message","accessToken","data","localStorage","setItem","replace","concat","error","_error$response","_error$response$data","console","className","children","onSubmit","type","placeholder","value","onChange","target","disabled"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/page/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/LoginPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    if (!username || !password) {\n      alert('아이디와 비밀번호를 입력해 주세요.');\n      return;\n    }\n\n    setLoading(true); // 로딩 상태 활성화\n\n    try {\n      const response = await axios.post('/member/login', {\n        membername: username,\n        password: password,\n      });\n\n      const { memberId, role, statusCode, message, accessToken } = response.data;\n\n      if (statusCode === 200 && memberId && accessToken) {\n        alert(message || '로그인 성공!');\n\n        // Local Storage에 토큰 및 사용자 정보 저장\n        localStorage.setItem('memberId', memberId);\n        localStorage.setItem('role', role); // role 저장\n        localStorage.setItem('token', accessToken);\n\n        // role에 따라 페이지 이동\n        if (role === 'ADMIN') {\n          navigate('/admin/dashboard', { replace: true }); // 관리자 페이지로 이동\n        } else {\n          navigate(`/main/${memberId}`, { replace: true }); // 일반 사용자 메인 페이지로 이동\n        }\n      } else {\n        alert(message || '로그인 실패. 다시 시도해 주세요.');\n      }\n    } catch (error) {\n      console.error('로그인 에러:', error);\n      alert(\n        error.response?.data?.message || '로그인 중 문제가 발생했습니다. 다시 시도해 주세요.'\n      );\n    } finally {\n      setLoading(false); // 로딩 상태 비활성화\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <form onSubmit={handleLogin} className=\"login-form\">\n        <h2>로그인</h2>\n        <input\n          type=\"text\"\n          placeholder=\"아이디\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          disabled={loading} // 로딩 중 입력 비활성화\n        />\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          disabled={loading} // 로딩 중 입력 비활성화\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? '로그인 중...' : '로그인'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}