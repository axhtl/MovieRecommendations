{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\page\\\\ViewPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // navigate 사용을 위한 import\nimport Navbar from '../ui/Navbar';\nimport { tmdbApiClient } from '../../api/tmdb'; // Axios 인스턴스 가져오기\nimport MovieList from '../list/MovieList'; // MovieList 컴포넌트 가져오기\nimport '../styles/ViewPage.css'; // 스타일 파일 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewPage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate(); // navigate 사용 준비\n\n  useEffect(() => {\n    // 최신 영화 데이터를 불러오는 함수\n    const fetchMovies = async () => {\n      try {\n        const response = await tmdbApiClient.get('/movie/popular', {\n          params: {\n            language: 'ko-KR' // 응답 언어 설정 (한국어)\n          }\n        });\n        setMovies(response.data.results); // 영화 목록 저장\n      } catch (error) {\n        console.error('영화 데이터 불러오기 오류:', error);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  // 영화 클릭 시 영화 상세 페이지로 이동하는 함수\n  const handleMovieClick = movieId => {\n    console.log('Navigating to movie details with ID:', movieId); // 로그 추가\n    navigate(`/api/movies/detail/${movieId}?language=ko`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCD5C\\uC2E0 \\uC601\\uD654 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        onMovieClick: handleMovieClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewPage, \"2l8veYWCZCJ84ygQNsrVM9qUT6I=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewPage;\nexport default ViewPage;\nvar _c;\n$RefreshReg$(_c, \"ViewPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Navbar","tmdbApiClient","MovieList","jsxDEV","_jsxDEV","ViewPage","_s","movies","setMovies","navigate","fetchMovies","response","get","params","language","data","results","error","console","handleMovieClick","movieId","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMovieClick","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/page/ViewPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // navigate 사용을 위한 import\r\nimport Navbar from '../ui/Navbar';\r\nimport { tmdbApiClient } from '../../api/tmdb'; // Axios 인스턴스 가져오기\r\nimport MovieList from '../list/MovieList'; // MovieList 컴포넌트 가져오기\r\nimport '../styles/ViewPage.css'; // 스타일 파일 추가\r\n\r\nconst ViewPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const navigate = useNavigate(); // navigate 사용 준비\r\n\r\n  useEffect(() => {\r\n    // 최신 영화 데이터를 불러오는 함수\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await tmdbApiClient.get('/movie/popular', {\r\n          params: {\r\n            language: 'ko-KR', // 응답 언어 설정 (한국어)\r\n          },\r\n        });\r\n        setMovies(response.data.results); // 영화 목록 저장\r\n      } catch (error) {\r\n        console.error('영화 데이터 불러오기 오류:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  // 영화 클릭 시 영화 상세 페이지로 이동하는 함수\r\n  const handleMovieClick = (movieId) => {\r\n    console.log('Navigating to movie details with ID:', movieId); // 로그 추가\r\n    navigate(`/api/movies/detail/${movieId}?language=ko`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-page\">\r\n      <Navbar />\r\n      \r\n      <div className=\"view-content\">\r\n        <h2>최신 영화 목록</h2>\r\n        <MovieList movies={movies} onMovieClick={handleMovieClick} /> {/* MovieList 컴포넌트 사용 */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,aAAa,QAAQ,gBAAgB,CAAC,CAAC;AAChD,OAAOC,SAAS,MAAM,mBAAmB,CAAC,CAAC;AAC3C,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCF,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,aAAa,CAACW,GAAG,CAAC,gBAAgB,EAAE;UACzDC,MAAM,EAAE;YACNC,QAAQ,EAAE,OAAO,CAAE;UACrB;QACF,CAAC,CAAC;QACFN,SAAS,CAACG,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACzC;IACF,CAAC;IAEDP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,gBAAgB,GAAIC,OAAO,IAAK;IACpCF,OAAO,CAACG,GAAG,CAAC,sCAAsC,EAAED,OAAO,CAAC,CAAC,CAAC;IAC9DX,QAAQ,CAAC,sBAAsBW,OAAO,cAAc,CAAC;EACvD,CAAC;EAED,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVvB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BnB,OAAA;QAAAmB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBvB,OAAA,CAACF,SAAS;QAACK,MAAM,EAAEA,MAAO;QAACqB,YAAY,EAAET;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CAtCID,QAAQ;EAAA,QAEKN,WAAW;AAAA;AAAA8B,EAAA,GAFxBxB,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}