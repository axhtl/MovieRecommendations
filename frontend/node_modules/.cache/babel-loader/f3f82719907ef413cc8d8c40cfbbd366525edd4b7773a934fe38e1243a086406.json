{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\admin\\\\AdminMovie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AdminNavbar from '../ui/AdminNavbar';\nimport axios from 'axios';\nimport '../styles/admin/AdminUsers.css'; // 기존 스타일 재사용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminMovie() {\n  _s();\n  const [movies, setMovies] = useState([]); // 영화 데이터를 저장할 상태\n  const navigate = useNavigate();\n  useEffect(() => {\n    const memberId = localStorage.getItem('memberId');\n    const token = localStorage.getItem('token');\n\n    // 관리자 권한 확인\n    if (!memberId || memberId !== '14' || !token) {\n      alert('접근 권한이 없습니다.');\n      navigate('/');\n    }\n    const fetchMovieData = async () => {\n      try {\n        const userResponse = await axios.get('/member/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const allMovies = [];\n\n        // 각 사용자별로 영화 데이터 가져오기\n        for (const user of userResponse.data) {\n          const memberId = user.member.memberId;\n          const reviewInfos = user.reviewInfos || [];\n\n          // 영화 리뷰 정보가 있는 경우만 처리\n          if (reviewInfos.length > 0) {\n            // 영화 제목 데이터 가져오기\n            const movieTitlesResponse = await axios.get(`/member/${memberId}/movie-titles`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            const movieTitles = movieTitlesResponse.data; // 모든 영화 제목 데이터\n\n            reviewInfos.forEach(reviewInfo => {\n              const matchedMovie = movieTitles.find(movie => movie.movieId === reviewInfo.movieInfo.movieId);\n              allMovies.push({\n                reviewId: reviewInfo.reviewId,\n                // 리뷰 ID로 정렬할 때 사용\n                memberId: user.member.memberId,\n                memberName: user.member.membername,\n                movieTitle: matchedMovie ? matchedMovie.title : 'Unknown',\n                // 매칭된 영화 제목\n                star: reviewInfo.star || 'N/A'\n              });\n            });\n          }\n        }\n\n        // 리뷰 ID 기준으로 정렬\n        allMovies.sort((a, b) => a.reviewId - b.reviewId);\n        setMovies(allMovies);\n      } catch (error) {\n        console.error('영화 데이터를 가져오는 중 오류 발생:', error);\n        alert('영화 데이터를 가져올 수 없습니다.');\n      }\n    };\n    fetchMovieData();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(AdminNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC601\\uD654 \\uAE30\\uB85D \\uC870\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Member ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Member Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Movie Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.memberId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.memberName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.movieTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: movie.star\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminMovie, \"2l8veYWCZCJ84ygQNsrVM9qUT6I=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminMovie;\nexport default AdminMovie;\nvar _c;\n$RefreshReg$(_c, \"AdminMovie\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","AdminNavbar","axios","jsxDEV","_jsxDEV","AdminMovie","_s","movies","setMovies","navigate","memberId","localStorage","getItem","token","alert","fetchMovieData","userResponse","get","headers","Authorization","allMovies","user","data","member","reviewInfos","length","movieTitlesResponse","movieTitles","forEach","reviewInfo","matchedMovie","find","movie","movieId","movieInfo","push","reviewId","memberName","membername","movieTitle","title","star","sort","a","b","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/admin/AdminMovie.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AdminNavbar from '../ui/AdminNavbar';\r\nimport axios from 'axios';\r\nimport '../styles/admin/AdminUsers.css'; // 기존 스타일 재사용\r\n\r\nfunction AdminMovie() {\r\n  const [movies, setMovies] = useState([]); // 영화 데이터를 저장할 상태\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const memberId = localStorage.getItem('memberId');\r\n    const token = localStorage.getItem('token');\r\n\r\n    // 관리자 권한 확인\r\n    if (!memberId || memberId !== '14' || !token) {\r\n      alert('접근 권한이 없습니다.');\r\n      navigate('/');\r\n    }\r\n\r\n    const fetchMovieData = async () => {\r\n      try {\r\n        const userResponse = await axios.get('/member/users', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const allMovies = [];\r\n\r\n        // 각 사용자별로 영화 데이터 가져오기\r\n        for (const user of userResponse.data) {\r\n          const memberId = user.member.memberId;\r\n          const reviewInfos = user.reviewInfos || [];\r\n\r\n          // 영화 리뷰 정보가 있는 경우만 처리\r\n          if (reviewInfos.length > 0) {\r\n            // 영화 제목 데이터 가져오기\r\n            const movieTitlesResponse = await axios.get(`/member/${memberId}/movie-titles`, {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n\r\n            const movieTitles = movieTitlesResponse.data; // 모든 영화 제목 데이터\r\n\r\n            reviewInfos.forEach((reviewInfo) => {\r\n              const matchedMovie = movieTitles.find(\r\n                (movie) => movie.movieId === reviewInfo.movieInfo.movieId\r\n              );\r\n\r\n              allMovies.push({\r\n                reviewId: reviewInfo.reviewId, // 리뷰 ID로 정렬할 때 사용\r\n                memberId: user.member.memberId,\r\n                memberName: user.member.membername,\r\n                movieTitle: matchedMovie ? matchedMovie.title : 'Unknown', // 매칭된 영화 제목\r\n                star: reviewInfo.star || 'N/A',\r\n              });\r\n            });\r\n          }\r\n        }\r\n\r\n        // 리뷰 ID 기준으로 정렬\r\n        allMovies.sort((a, b) => a.reviewId - b.reviewId);\r\n\r\n        setMovies(allMovies);\r\n      } catch (error) {\r\n        console.error('영화 데이터를 가져오는 중 오류 발생:', error);\r\n        alert('영화 데이터를 가져올 수 없습니다.');\r\n      }\r\n    };\r\n\r\n    fetchMovieData();\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <AdminNavbar />\r\n      <div className=\"admin-content\">\r\n        <h1>영화 기록 조회</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>No</th>\r\n              <th>Member ID</th>\r\n              <th>Member Name</th>\r\n              <th>Movie Title</th>\r\n              <th>Star</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {movies.map((movie, index) => (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td> {/* 순서 번호 표시 */}\r\n                <td>{movie.memberId}</td>\r\n                <td>{movie.memberName}</td>\r\n                <td>{movie.movieTitle}</td>\r\n                <td>{movie.star}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminMovie;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAE3C;IACA,IAAI,CAACF,QAAQ,IAAIA,QAAQ,KAAK,IAAI,IAAI,CAACG,KAAK,EAAE;MAC5CC,KAAK,CAAC,cAAc,CAAC;MACrBL,QAAQ,CAAC,GAAG,CAAC;IACf;IAEA,MAAMM,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,eAAe,EAAE;UACpDC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QAEF,MAAMO,SAAS,GAAG,EAAE;;QAEpB;QACA,KAAK,MAAMC,IAAI,IAAIL,YAAY,CAACM,IAAI,EAAE;UACpC,MAAMZ,QAAQ,GAAGW,IAAI,CAACE,MAAM,CAACb,QAAQ;UACrC,MAAMc,WAAW,GAAGH,IAAI,CAACG,WAAW,IAAI,EAAE;;UAE1C;UACA,IAAIA,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;YAC1B;YACA,MAAMC,mBAAmB,GAAG,MAAMxB,KAAK,CAACe,GAAG,CAAC,WAAWP,QAAQ,eAAe,EAAE;cAC9EQ,OAAO,EAAE;gBAAEC,aAAa,EAAE,UAAUN,KAAK;cAAG;YAC9C,CAAC,CAAC;YAEF,MAAMc,WAAW,GAAGD,mBAAmB,CAACJ,IAAI,CAAC,CAAC;;YAE9CE,WAAW,CAACI,OAAO,CAAEC,UAAU,IAAK;cAClC,MAAMC,YAAY,GAAGH,WAAW,CAACI,IAAI,CAClCC,KAAK,IAAKA,KAAK,CAACC,OAAO,KAAKJ,UAAU,CAACK,SAAS,CAACD,OACpD,CAAC;cAEDb,SAAS,CAACe,IAAI,CAAC;gBACbC,QAAQ,EAAEP,UAAU,CAACO,QAAQ;gBAAE;gBAC/B1B,QAAQ,EAAEW,IAAI,CAACE,MAAM,CAACb,QAAQ;gBAC9B2B,UAAU,EAAEhB,IAAI,CAACE,MAAM,CAACe,UAAU;gBAClCC,UAAU,EAAET,YAAY,GAAGA,YAAY,CAACU,KAAK,GAAG,SAAS;gBAAE;gBAC3DC,IAAI,EAAEZ,UAAU,CAACY,IAAI,IAAI;cAC3B,CAAC,CAAC;YACJ,CAAC,CAAC;UACJ;QACF;;QAEA;QACArB,SAAS,CAACsB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACP,QAAQ,GAAGQ,CAAC,CAACR,QAAQ,CAAC;QAEjD5B,SAAS,CAACY,SAAS,CAAC;MACtB,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C/B,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAK2C,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB5C,OAAA,CAACH,WAAW;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfhD,OAAA;MAAK2C,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B5C,OAAA;QAAA4C,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhD,OAAA;QAAA4C,QAAA,gBACE5C,OAAA;UAAA4C,QAAA,eACE5C,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAA4C,QAAA,EAAI;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXhD,OAAA;cAAA4C,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBhD,OAAA;cAAA4C,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBhD,OAAA;cAAA4C,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBhD,OAAA;cAAA4C,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRhD,OAAA;UAAA4C,QAAA,EACGzC,MAAM,CAAC8C,GAAG,CAAC,CAACrB,KAAK,EAAEsB,KAAK,kBACvBlD,OAAA;YAAA4C,QAAA,gBACE5C,OAAA;cAAA4C,QAAA,EAAKM,KAAK,GAAG;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,KAAC,eACrBhD,OAAA;cAAA4C,QAAA,EAAKhB,KAAK,CAACtB;YAAQ;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzBhD,OAAA;cAAA4C,QAAA,EAAKhB,KAAK,CAACK;YAAU;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BhD,OAAA;cAAA4C,QAAA,EAAKhB,KAAK,CAACO;YAAU;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BhD,OAAA;cAAA4C,QAAA,EAAKhB,KAAK,CAACS;YAAI;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GALdE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9C,EAAA,CA/FQD,UAAU;EAAA,QAEAL,WAAW;AAAA;AAAAuD,EAAA,GAFrBlD,UAAU;AAiGnB,eAAeA,UAAU;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}