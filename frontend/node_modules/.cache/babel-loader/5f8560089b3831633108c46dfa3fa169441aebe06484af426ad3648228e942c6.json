{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MovieRecommendations\\\\frontend\\\\src\\\\components\\\\list\\\\MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport StarRating from './StarRating';\nimport Navbar from '../ui/Navbar';\nimport axios from 'axios';\nimport '../styles/MovieDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  var _credits$cast, _credits$crew, _movieDetails$genres;\n  const {\n    movieId\n  } = useParams(); // URL에서 영화 ID 가져오기\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [movieDetails, setMovieDetails] = useState(null); // 영화 세부 정보 상태\n  const [credits, setCredits] = useState(null); // 배우 및 감독 정보 상태\n  const [rating, setRating] = useState(0); // 사용자가 등록한 별점 상태\n\n  useEffect(() => {\n    // 영화 세부 정보 및 크레딧 정보 가져오기\n    const fetchMovieDetails = async () => {\n      if (!movieId) {\n        console.error('영화 ID가 없습니다.');\n        return;\n      }\n      try {\n        const language = new URLSearchParams(location.search).get('language') || 'ko';\n        const [detailsResponse, creditsResponse] = await Promise.all([axios.get(`/api/movies/detail/${movieId}`, {\n          params: {\n            language\n          },\n          headers: {\n            Authorization: `Bearer YOUR_ACCESS_TOKEN_HERE`\n          }\n        }), axios.get(`/api/movies/${movieId}/credits`, {\n          params: {\n            language\n          },\n          headers: {\n            Authorization: `Bearer YOUR_ACCESS_TOKEN_HERE`\n          }\n        })]);\n        setMovieDetails(detailsResponse.data); // 영화 세부 정보 저장\n        setCredits(creditsResponse.data); // 배우 및 감독 정보 저장\n      } catch (error) {\n        var _error$response;\n        console.error('영화 세부 정보 및 크레딧 불러오기 오류:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert('영화 정보를 불러오는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.');\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId, location.search]);\n  const handleRegister = async () => {\n    const confirmRegistration = window.confirm('등록하시겠습니까?');\n    if (!confirmRegistration) {\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('로그인이 필요합니다.');\n        return;\n      }\n      const memberId = localStorage.getItem('memberId');\n      if (!memberId) {\n        alert('사용자 정보를 불러올 수 없습니다. 다시 로그인하세요.');\n        return;\n      }\n\n      // 서버에 영화와 별점 데이터 등록\n      await axios.post(`/review/${memberId}`, {\n        movieId: movieDetails.id || movieDetails.movieId,\n        // 영화 ID\n        ranked: rating // 사용자가 선택한 별점\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      alert('영화가 성공적으로 등록되었습니다.');\n      navigate(-1);\n    } catch (error) {\n      var _error$response2;\n      console.error('영화 등록 중 오류 발생:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      alert('영화 등록에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  if (!movieDetails || !credits) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  const imageUrl = movieDetails.poster_path ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}` : '/icons/default-image-url.jpg';\n  const handleImageError = e => {\n    e.target.src = '/icons/default-image-url.jpg'; // 이미지 로딩 실패 시 대체 이미지\n  };\n\n  // 배우 3명 및 감독 정보 추출\n  const cast = ((_credits$cast = credits.cast) === null || _credits$cast === void 0 ? void 0 : _credits$cast.slice(0, 3)) || []; // 상위 3명의 배우\n  const director = ((_credits$crew = credits.crew) === null || _credits$crew === void 0 ? void 0 : _credits$crew.find(person => person.job === 'Director')) || null; // 감독 정보\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: movieDetails.title || '영화 이미지',\n          onError: handleImageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movieDetails.title || '제목 없음'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uAC1C\\uBD09\\uC77C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 14\n          }, this), \" \", movieDetails.release_date || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC7A5\\uB974:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 14\n          }, this), \" \", ((_movieDetails$genres = movieDetails.genres) === null || _movieDetails$genres === void 0 ? void 0 : _movieDetails$genres.map(genre => genre.name).join(', ')) || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC904\\uAC70\\uB9AC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 14\n          }, this), \" \", movieDetails.overview || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uAC10\\uB3C5:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 14\n          }, this), \" \", (director === null || director === void 0 ? void 0 : director.name) || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uCD9C\\uC5F0 \\uBC30\\uC6B0:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 14\n          }, this), \" \", cast.map(actor => actor.name).join(', ') || '정보 없음']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"star-rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uBCC4\\uC810:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n            rating: rating,\n            onRatingChange: setRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"register-button\",\n            onClick: handleRegister,\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"kX3CjnKPRs+l0s0DkpnG8q8L1tc=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","useNavigate","StarRating","Navbar","axios","jsxDEV","_jsxDEV","MovieDetails","_s","_credits$cast","_credits$crew","_movieDetails$genres","movieId","location","navigate","movieDetails","setMovieDetails","credits","setCredits","rating","setRating","fetchMovieDetails","console","error","language","URLSearchParams","search","get","detailsResponse","creditsResponse","Promise","all","params","headers","Authorization","data","_error$response","response","message","alert","handleRegister","confirmRegistration","window","confirm","token","localStorage","getItem","memberId","post","id","ranked","_error$response2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","imageUrl","poster_path","handleImageError","e","target","src","cast","slice","director","crew","find","person","job","alt","title","onError","release_date","genres","map","genre","name","join","overview","actor","onRatingChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/list/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport StarRating from './StarRating';\r\nimport Navbar from '../ui/Navbar';\r\nimport axios from 'axios';\r\nimport '../styles/MovieDetails.css';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams(); // URL에서 영화 ID 가져오기\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [movieDetails, setMovieDetails] = useState(null); // 영화 세부 정보 상태\r\n  const [credits, setCredits] = useState(null); // 배우 및 감독 정보 상태\r\n  const [rating, setRating] = useState(0); // 사용자가 등록한 별점 상태\r\n\r\n  useEffect(() => {\r\n    // 영화 세부 정보 및 크레딧 정보 가져오기\r\n    const fetchMovieDetails = async () => {\r\n      if (!movieId) {\r\n        console.error('영화 ID가 없습니다.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const language = new URLSearchParams(location.search).get('language') || 'ko';\r\n\r\n        const [detailsResponse, creditsResponse] = await Promise.all([\r\n          axios.get(`/api/movies/detail/${movieId}`, {\r\n            params: { language },\r\n            headers: { Authorization: `Bearer YOUR_ACCESS_TOKEN_HERE` },\r\n          }),\r\n          axios.get(`/api/movies/${movieId}/credits`, {\r\n            params: { language },\r\n            headers: { Authorization: `Bearer YOUR_ACCESS_TOKEN_HERE` },\r\n          }),\r\n        ]);\r\n\r\n        setMovieDetails(detailsResponse.data); // 영화 세부 정보 저장\r\n        setCredits(creditsResponse.data); // 배우 및 감독 정보 저장\r\n      } catch (error) {\r\n        console.error('영화 세부 정보 및 크레딧 불러오기 오류:', error.response?.data || error.message);\r\n        alert('영화 정보를 불러오는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.');\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n  }, [movieId, location.search]);\r\n\r\n  const handleRegister = async () => {\r\n    const confirmRegistration = window.confirm('등록하시겠습니까?');\r\n    if (!confirmRegistration) {\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        alert('로그인이 필요합니다.');\r\n        return;\r\n      }\r\n  \r\n      const memberId = localStorage.getItem('memberId');\r\n      if (!memberId) {\r\n        alert('사용자 정보를 불러올 수 없습니다. 다시 로그인하세요.');\r\n        return;\r\n      }\r\n  \r\n      // 서버에 영화와 별점 데이터 등록\r\n      await axios.post(\r\n        `/review/${memberId}`,\r\n        {\r\n          movieId: movieDetails.id || movieDetails.movieId, // 영화 ID\r\n          ranked: rating, // 사용자가 선택한 별점\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n  \r\n      alert('영화가 성공적으로 등록되었습니다.');\r\n      navigate(-1);\r\n    } catch (error) {\r\n      console.error('영화 등록 중 오류 발생:', error.response?.data || error.message);\r\n      alert('영화 등록에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n  \r\n\r\n  if (!movieDetails || !credits) {\r\n    return (\r\n      <div className=\"movie-details\">\r\n        <Navbar />\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const imageUrl = movieDetails.poster_path\r\n    ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\r\n    : '/icons/default-image-url.jpg';\r\n\r\n  const handleImageError = (e) => {\r\n    e.target.src = '/icons/default-image-url.jpg'; // 이미지 로딩 실패 시 대체 이미지\r\n  };\r\n\r\n  // 배우 3명 및 감독 정보 추출\r\n  const cast = credits.cast?.slice(0, 3) || []; // 상위 3명의 배우\r\n  const director = credits.crew?.find(person => person.job === 'Director') || null; // 감독 정보\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      <Navbar />\r\n      <div className=\"movie-details-container\">\r\n        <div className=\"movie-image\">\r\n          <img\r\n            src={imageUrl}\r\n            alt={movieDetails.title || '영화 이미지'}\r\n            onError={handleImageError}\r\n          />\r\n        </div>\r\n        <div className=\"movie-info\">\r\n          <h2>{movieDetails.title || '제목 없음'}</h2>\r\n          <p><strong>개봉일:</strong> {movieDetails.release_date || '정보 없음'}</p>\r\n          <p><strong>장르:</strong> {movieDetails.genres?.map(genre => genre.name).join(', ') || '정보 없음'}</p>\r\n          <p><strong>줄거리:</strong> {movieDetails.overview || '정보 없음'}</p>\r\n          <p><strong>감독:</strong> {director?.name || '정보 없음'}</p>\r\n          <p><strong>출연 배우:</strong> {cast.map(actor => actor.name).join(', ') || '정보 없음'}</p>\r\n          <div className=\"star-rating\">\r\n            <p><strong>별점:</strong></p>\r\n            <StarRating rating={rating} onRatingChange={setRating} />\r\n          </div>\r\n          <div className=\"register-button-container\">\r\n            <button className=\"register-button\" onClick={handleRegister}>등록</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}