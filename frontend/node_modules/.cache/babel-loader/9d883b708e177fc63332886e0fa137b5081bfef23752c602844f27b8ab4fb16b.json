{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams,useLocation,useNavigate}from'react-router-dom';import StarRating from'./StarRating';import Navbar from'../ui/Navbar';import axios from'axios';import'../styles/MovieDetails.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MovieDetails=()=>{var _credits$cast,_credits$crew,_movieDetails$genres;const{movieId}=useParams();// URL에서 영화 ID 가져오기\nconst location=useLocation();const navigate=useNavigate();const[movieDetails,setMovieDetails]=useState(null);// 영화 세부 정보 상태\nconst[credits,setCredits]=useState(null);// 배우 및 감독 정보 상태\nconst[rating,setRating]=useState(0);// 사용자가 등록한 별점 상태\nuseEffect(()=>{// 영화 세부 정보 및 크레딧 정보 가져오기\nconst fetchMovieDetails=async()=>{if(!movieId){console.error('영화 ID가 없습니다.');return;}try{const language=new URLSearchParams(location.search).get('language')||'ko';const[detailsResponse,creditsResponse]=await Promise.all([axios.get(\"/api/movies/detail/\".concat(movieId),{params:{language},headers:{Authorization:\"Bearer YOUR_ACCESS_TOKEN_HERE\"}}),axios.get(\"/api/movies/\".concat(movieId,\"/credits\"),{params:{language},headers:{Authorization:\"Bearer YOUR_ACCESS_TOKEN_HERE\"}})]);setMovieDetails(detailsResponse.data);// 영화 세부 정보 저장\nsetCredits(creditsResponse.data);// 배우 및 감독 정보 저장\n}catch(error){var _error$response;console.error('영화 세부 정보 및 크레딧 불러오기 오류:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);alert('영화 정보를 불러오는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.');}};fetchMovieDetails();},[movieId,location.search]);const handleRegister=async()=>{const confirmRegistration=window.confirm('등록하시겠습니까?');if(!confirmRegistration){return;}try{const token=localStorage.getItem('token');if(!token){alert('로그인이 필요합니다.');return;}const memberId=localStorage.getItem('memberId');if(!memberId){alert('사용자 정보를 불러올 수 없습니다. 다시 로그인하세요.');return;}// 서버에 영화와 별점 데이터 등록\nawait axios.post(\"/review/\".concat(memberId),{movieId:movieDetails.id||movieDetails.movieId,// 영화 ID\nranked:rating// 사용자가 선택한 별점\n},{headers:{Authorization:\"Bearer \".concat(token),'Content-Type':'application/json'}});alert('영화가 성공적으로 등록되었습니다.');navigate(-1);}catch(error){var _error$response2;console.error('영화 등록 중 오류 발생:',((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);alert('영화 등록에 실패했습니다. 다시 시도해주세요.');}};if(!movieDetails||!credits){return/*#__PURE__*/_jsxs(\"div\",{className:\"movie-details\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]});}const imageUrl=movieDetails.poster_path?\"https://image.tmdb.org/t/p/w500\".concat(movieDetails.poster_path):'/icons/default-image-url.jpg';const handleImageError=e=>{e.target.src='/icons/default-image-url.jpg';// 이미지 로딩 실패 시 대체 이미지\n};// 배우 3명 및 감독 정보 추출\nconst cast=((_credits$cast=credits.cast)===null||_credits$cast===void 0?void 0:_credits$cast.slice(0,3))||[];// 상위 3명의 배우\nconst director=((_credits$crew=credits.crew)===null||_credits$crew===void 0?void 0:_credits$crew.find(person=>person.job==='Director'))||null;// 감독 정보\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"movie-details\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie-details-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"movie-image\",children:/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:movieDetails.title||'영화 이미지',onError:handleImageError})}),/*#__PURE__*/_jsxs(\"div\",{className:\"movie-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:movieDetails.title||'제목 없음'}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uAC1C\\uBD09\\uC77C:\"}),\" \",movieDetails.release_date||'정보 없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC7A5\\uB974:\"}),\" \",((_movieDetails$genres=movieDetails.genres)===null||_movieDetails$genres===void 0?void 0:_movieDetails$genres.map(genre=>genre.name).join(', '))||'정보 없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC904\\uAC70\\uB9AC:\"}),\" \",movieDetails.overview||'정보 없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uAC10\\uB3C5:\"}),\" \",(director===null||director===void 0?void 0:director.name)||'정보 없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uCD9C\\uC5F0 \\uBC30\\uC6B0:\"}),\" \",cast.map(actor=>actor.name).join(', ')||'정보 없음']}),/*#__PURE__*/_jsxs(\"div\",{className:\"star-rating\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\uBCC4\\uC810:\"})}),/*#__PURE__*/_jsx(StarRating,{rating:rating,onRatingChange:setRating})]}),/*#__PURE__*/_jsx(\"div\",{className:\"register-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"register-button\",onClick:handleRegister,children:\"\\uB4F1\\uB85D\"})})]})]})]});};export default MovieDetails;","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","useNavigate","StarRating","Navbar","axios","jsx","_jsx","jsxs","_jsxs","MovieDetails","_credits$cast","_credits$crew","_movieDetails$genres","movieId","location","navigate","movieDetails","setMovieDetails","credits","setCredits","rating","setRating","fetchMovieDetails","console","error","language","URLSearchParams","search","get","detailsResponse","creditsResponse","Promise","all","concat","params","headers","Authorization","data","_error$response","response","message","alert","handleRegister","confirmRegistration","window","confirm","token","localStorage","getItem","memberId","post","id","ranked","_error$response2","className","children","imageUrl","poster_path","handleImageError","e","target","src","cast","slice","director","crew","find","person","job","alt","title","onError","release_date","genres","map","genre","name","join","overview","actor","onRatingChange","onClick"],"sources":["C:/Users/MovieRecommendations/frontend/src/components/list/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport StarRating from './StarRating';\r\nimport Navbar from '../ui/Navbar';\r\nimport axios from 'axios';\r\nimport '../styles/MovieDetails.css';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams(); // URL에서 영화 ID 가져오기\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [movieDetails, setMovieDetails] = useState(null); // 영화 세부 정보 상태\r\n  const [credits, setCredits] = useState(null); // 배우 및 감독 정보 상태\r\n  const [rating, setRating] = useState(0); // 사용자가 등록한 별점 상태\r\n\r\n  useEffect(() => {\r\n    // 영화 세부 정보 및 크레딧 정보 가져오기\r\n    const fetchMovieDetails = async () => {\r\n      if (!movieId) {\r\n        console.error('영화 ID가 없습니다.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const language = new URLSearchParams(location.search).get('language') || 'ko';\r\n\r\n        const [detailsResponse, creditsResponse] = await Promise.all([\r\n          axios.get(`/api/movies/detail/${movieId}`, {\r\n            params: { language },\r\n            headers: { Authorization: `Bearer YOUR_ACCESS_TOKEN_HERE` },\r\n          }),\r\n          axios.get(`/api/movies/${movieId}/credits`, {\r\n            params: { language },\r\n            headers: { Authorization: `Bearer YOUR_ACCESS_TOKEN_HERE` },\r\n          }),\r\n        ]);\r\n\r\n        setMovieDetails(detailsResponse.data); // 영화 세부 정보 저장\r\n        setCredits(creditsResponse.data); // 배우 및 감독 정보 저장\r\n      } catch (error) {\r\n        console.error('영화 세부 정보 및 크레딧 불러오기 오류:', error.response?.data || error.message);\r\n        alert('영화 정보를 불러오는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.');\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n  }, [movieId, location.search]);\r\n\r\n  const handleRegister = async () => {\r\n    const confirmRegistration = window.confirm('등록하시겠습니까?');\r\n    if (!confirmRegistration) {\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        alert('로그인이 필요합니다.');\r\n        return;\r\n      }\r\n  \r\n      const memberId = localStorage.getItem('memberId');\r\n      if (!memberId) {\r\n        alert('사용자 정보를 불러올 수 없습니다. 다시 로그인하세요.');\r\n        return;\r\n      }\r\n  \r\n      // 서버에 영화와 별점 데이터 등록\r\n      await axios.post(\r\n        `/review/${memberId}`,\r\n        {\r\n          movieId: movieDetails.id || movieDetails.movieId, // 영화 ID\r\n          ranked: rating, // 사용자가 선택한 별점\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n  \r\n      alert('영화가 성공적으로 등록되었습니다.');\r\n      navigate(-1);\r\n    } catch (error) {\r\n      console.error('영화 등록 중 오류 발생:', error.response?.data || error.message);\r\n      alert('영화 등록에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n  \r\n\r\n  if (!movieDetails || !credits) {\r\n    return (\r\n      <div className=\"movie-details\">\r\n        <Navbar />\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const imageUrl = movieDetails.poster_path\r\n    ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\r\n    : '/icons/default-image-url.jpg';\r\n\r\n  const handleImageError = (e) => {\r\n    e.target.src = '/icons/default-image-url.jpg'; // 이미지 로딩 실패 시 대체 이미지\r\n  };\r\n\r\n  // 배우 3명 및 감독 정보 추출\r\n  const cast = credits.cast?.slice(0, 3) || []; // 상위 3명의 배우\r\n  const director = credits.crew?.find(person => person.job === 'Director') || null; // 감독 정보\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      <Navbar />\r\n      <div className=\"movie-details-container\">\r\n        <div className=\"movie-image\">\r\n          <img\r\n            src={imageUrl}\r\n            alt={movieDetails.title || '영화 이미지'}\r\n            onError={handleImageError}\r\n          />\r\n        </div>\r\n        <div className=\"movie-info\">\r\n          <h2>{movieDetails.title || '제목 없음'}</h2>\r\n          <p><strong>개봉일:</strong> {movieDetails.release_date || '정보 없음'}</p>\r\n          <p><strong>장르:</strong> {movieDetails.genres?.map(genre => genre.name).join(', ') || '정보 없음'}</p>\r\n          <p><strong>줄거리:</strong> {movieDetails.overview || '정보 없음'}</p>\r\n          <p><strong>감독:</strong> {director?.name || '정보 없음'}</p>\r\n          <p><strong>출연 배우:</strong> {cast.map(actor => actor.name).join(', ') || '정보 없음'}</p>\r\n          <div className=\"star-rating\">\r\n            <p><strong>별점:</strong></p>\r\n            <StarRating rating={rating} onRatingChange={setRating} />\r\n          </div>\r\n          <div className=\"register-button-container\">\r\n            <button className=\"register-button\" onClick={handleRegister}>등록</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}